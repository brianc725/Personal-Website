{"version":3,"sources":["screens/home.js","screens/experience.js","screens/projects.js","screens/contacts.js","screens/courses.js","scripts/strings.js","screens/awards.js","firebase.js","screens/resume.js","scripts/validators.js","screens/admin.js","components/ExperienceForm.js","components/ProjectsForm.js","components/SocialsForm.js","components/ResumeForm.js","components/AwardsForm.js","screens/edit.js","components/navheader.js","components/privateroute.js","courseData.js","App.js","serviceWorker.js","index.js"],"names":["Home","generateOpener","hour","Date","getHours","opener","this","Alert","color","href","target","rel","Jumbotron","Component","Experience","props","allData","length","getData","undefined","experienceItems","map","item","data","ListGroupItem","key","id","Card","name","CardHeader","tag","className","CardBody","title","CardTitle","start_date","end_date","CardSubtitle","location","description","CardText","ListGroup","Projects","projItems","descriptionArray","split","descriptionTools","descriptionText","trim","CardFooter","html_url","CardLink","homepage","Contacts","socialsData","socialItems","Media","link","icon","left","object","src","alt","Course","desc","Courses","toggle","tab","state","activeTab","setState","currentCoursesData","completedCoursesData","Nav","tabs","NavItem","NavLink","classnames","active","onClick","disabled","TabContent","TabPane","tabId","nameNoSpace","replace","sortAlpha","items","sort","a","b","toLowerCase","localeCompare","sortPriority","Number","order","stringToArr","str","i","Awards","separateAwarded","awarded","flush","awardsData","awardsItems","style","paddingTop","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fb","handleSignInWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","handleSignOut","signOut","getCurrentUser","currentUser","isUserLoggedIn","firebase","initializeApp","db","firestore","experienceRef","collection","projectsRef","socialsRef","clubsRef","awardsRef","storageRef","storage","ref","Resume","loadFile","resumeRef","child","errorStatus","getDownloadURL","then","url","dUrl","catch","error","console","code","downloadUrl","width","height","window","innerHeight","display","padding-top","position","emailRegex","emailValidator","test","Admin","onSubmit","event","log","history","push","errorCode","errorMessage","message","invalidPassword","invalidEmail","preventDefault","handleChange","value","Form","FormGroup","Label","for","Input","invalid","type","onChange","FormFeedback","Button","ExperienceForm","handleUpdate","newName","addition","firebaseUpdateObject","Object","entries","fbKey","itemRef","fbRef","doc","update","handleDelete","delete","err","handleNewSubmission","add","docRef","Row","form","Col","md","placeholder","sm","ProjectsForm","getProjectsData","projectsData","get","snapshot","forEach","repo_names","addProject","project","allProjsStr","toString","concat","removeProject","remainingData","filter","projectEditable","idx","SocialsForm","ResumeForm","checkFile","document","getElementById","files","noFile","success","handleSubmit","file","put","accept","AwardsForm","Edit","getExperienceData","experienceData","sorted","getSocialsData","getAwardsData","getClubsData","clubsData","coursesData","experienceDBForm","socialsDBForm","clubsDBForm","awardsDBForm","NavHeader","isOpen","toggleCond","onAuthStateChanged","user","Navbar","light","fixed","expand","NavbarBrand","Link","to","NavbarToggler","Collapse","navbar","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","PrivateRoute","component","rest","render","pathname","from","courseData","App","filteredRepos","filteredStr","filteredArr","fetch","json","includes","getCoursesData","path","exact","Boolean","hostname","match","ReactDOM","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c524992f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, Alert } from 'reactstrap';\n\nclass Home extends Component {\n  generateOpener = () => {\n    var date = new Date();\n    var hour = date.getHours(); //gets hour in 24 hour format\n\n    if (hour >= 18) { //6pm to midnight\n      return \"Good Evening, I'm Brian!\";\n    } else if (hour >= 12) { //12pm to 6pm\n      return \"Good Afternoon, I'm Brian!\";\n    } else if (hour >= 0) { //midnight to 12pm\n      return \"Good Morning, I'm Brian!\";\n    } else { //if the date can't be accessed for whatever reason\n      return \"Hello, I'm Brian!\";\n    }\n  }\n\n  render() {\n    const opener = this.generateOpener();\n\n    return (\n      <div>\n        <Alert color=\"warning\">\n          This site is under active development - please visit my\n          {' '}\n          <a href=\"https://brianc725.github.io/Old-Personal-Website/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            previous static portfolio website\n          </a>\n          {' '}\n          for the most up to date information.\n        </Alert>\n        <Jumbotron>\n          <h1>{opener}</h1>\n          <h4>I am currently a fourth year Computer Science and Engineering\n            major at University of California, Los Angeles.\n          </h4>\n          <hr />\n          <p>Besides learning how to code, I enjoy photography and traveling.</p>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Alert,\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  CardHeader,\n} from 'reactstrap';\n\nclass Experience extends Component {\n  componentDidMount() {\n    if (!this.props.allData) {\n      return;\n    }\n\n    if (this.props.allData.length === 0) {\n      this.props.getData();\n    }\n  }\n\n  render() {\n    if (this.props.allData === undefined) {\n      return (\n        <Alert color=\"danger\">\n          Failed to load data. Please try again later.\n          </Alert>\n      )\n    }\n\n    let experienceItems = this.props.allData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Card>\n            {data.name && <CardHeader tag=\"h3\" className=\"text-center\">{data.name}</CardHeader>}\n            <CardBody className=\"text-center\">\n              {data.title && <CardTitle tag=\"h5\">{data.title}</CardTitle>}\n              {data.start_date && data.end_date && <CardSubtitle><em>{data.start_date} - {data.end_date}</em></CardSubtitle>}\n              {data.location && <CardSubtitle><small><em>{data.location}</em></small></CardSubtitle>}\n              {data.description && <CardText>{data.description}</CardText>}\n            </CardBody>\n          </Card>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {experienceItems}\n      </ListGroup>\n    );\n  }\n}\n\nexport default Experience;","import React, { Component } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Alert,\n  Card,\n  CardLink,\n  CardFooter,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  CardHeader,\n} from 'reactstrap';\n\nclass Projects extends Component {\n  componentDidMount() {\n    if (!this.props.allData) {\n      return;\n    }\n\n    if (this.props.allData.length === 0) {\n      this.props.getData();\n    }\n  }\n\n  render() {\n    if (this.props.allData === undefined) {\n      return (\n        <Alert color=\"danger\">\n          Failed to load data. Please try again later.\n          </Alert>\n      )\n    }\n\n    let projItems = this.props.allData.map((item) => {\n      const descriptionArray = item.description && item.description.split(':');\n      let descriptionTools = '';\n      let descriptionText = '';\n      if (descriptionArray.length === 2) {\n        descriptionTools = descriptionArray[0].trim();\n        descriptionText = descriptionArray[1].trim();\n      }\n\n      return (\n        <ListGroupItem key={item.id}>\n          <Card>\n            {item.name && <CardHeader tag=\"h3\" className=\"text-center\">{item.name}</CardHeader>}\n            <CardBody className=\"text-center\">\n              {descriptionText && <CardTitle tag=\"h5\">{descriptionText}</CardTitle>}\n              {descriptionTools && <CardSubtitle>Utilized: {descriptionTools}</CardSubtitle>}\n            </CardBody>\n            <CardFooter className=\"text-center\">\n              {item.html_url && <CardLink href={item.html_url} target=\"_blank\" rel=\"noopener noreferrer\">Github Repository</CardLink>}\n              {item.homepage && <CardLink href={item.homepage} target=\"_blank\" rel=\"noopener noreferrer\">Project Page</CardLink>}\n            </CardFooter>\n          </Card>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {projItems}\n      </ListGroup>\n    );\n  }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Media, Alert } from 'reactstrap';\nimport '../styles/contactsStyles.css';\nimport '../App.css';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    if (!this.props.socialsData) {\n      return;\n    }\n\n    if (this.props.socialsData.length === 0) {\n      this.props.getData();\n    }\n  }\n\n  render() {\n    if (!this.props.socialsData) {\n        return (\n          <Alert color=\"danger\">\n            Failed to load data. Please try again later.\n          </Alert>\n        )\n    }\n\n    let socialItems = this.props.socialsData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Media href={data.link ? data.link : '#'} target=\"_blank\" rel=\"noopener noreferrer\" className=\"media-all\">\n            {\n              item.data.icon &&\n              <Media left>\n                <Media object src={data.icon} alt={data.name ? data.name : 'company icon'} className=\"icon-img\" />\n              </Media>\n            }\n            <h3 className=\"icon-name\">{data.name}</h3>\n          </Media>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {socialItems}\n      </ListGroup>\n    )\n  }\n}\n\nexport default Contacts;","import React, { Component } from 'react';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Alert,\n} from 'reactstrap';\nimport classnames from 'classnames';\n\nconst Course = (props) => {\n  const { data } = props;\n  return (<><h3>{data.name}</h3><h5>{data.desc}</h5><hr /></>);\n}\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.currentCoursesData && !this.props.completedCoursesData) {\n      return;\n    }\n\n    if (this.props.currentCoursesData.length === 0 && this.props.completedCoursesData.length === 0) {\n      this.props.getData();\n    }\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.currentCoursesData && !this.props.completedCoursesData) {\n      return (\n        <Alert color=\"danger\">\n          Failed to load data. Please try again later.\n        </Alert>\n      )\n    }\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Completed Courses\n                        </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              disabled\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Current Courses\n                    </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            {\n              this.props.completedCoursesData.length !== 0\n                ?\n                this.props.completedCoursesData.map(item => <Course key={item.id} data={item.data} />)\n                :\n                'Something went wrong...'\n            }\n          </TabPane>\n          <TabPane tabId=\"2\">\n            {\n              this.props.currentCoursesData.length !== 0\n                ?\n                this.props.currentCoursesData.map(item => <Course key={item.id} data={item.data} />)\n                :\n                'I graduated from UCLA in March 2020. There are no relevant classes that I am currently taking.'\n            }\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default Courses;","export const nameNoSpace = (name) => {\n    return name.replace(/\\s/g, '');\n}\n\nexport const sortAlpha = (items) => {\n    return items.sort((a,b) => {\n        return a['data'].name.toLowerCase().localeCompare(b['data'].name.toLowerCase());\n    });\n}\n\n// sorts from highest number to lowest\nexport const sortPriority = (items) => {\n    return items.sort((a,b) => {\n        return Number(b['data'].order)-Number(a['data'].order);\n    });\n}\n\n// Takes as input a string containing \"A, B, C\"\n// and returns [A, B, C]\nexport const stringToArr = (str) => {\n    const arr = str.split(',');\n    const trimmed = arr.map(i => i.trim());\n    return trimmed;\n}","import React, { Component } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Alert,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardHeader,\n} from 'reactstrap';\nimport '../App.css';\nimport { stringToArr } from '../scripts/strings';\n\nclass Awards extends Component {\n  componentDidMount() {\n    // Do nothing if there was an error\n    if (!this.props.awardsData) {\n      return;\n    }\n\n    // No data yet so call API to update state above\n    if (this.props.awardsData.length === 0) {\n      // No data yet so load first and then put spinner\n      this.props.getData();\n    }\n  }\n\n  // Given the data.awarded string in format \"F 18, F 19\", return list comp.\n  // separating them\n  separateAwarded = (awarded) => {\n    const data = stringToArr(awarded);\n    let items = data.map(item => {\n      return (\n        <ListGroupItem key={item}>{item}</ListGroupItem>\n      );\n    });\n    return (\n      <ListGroup flush>{items}</ListGroup>\n    );\n  }\n\n  render() {\n    if (!this.props.awardsData) {\n      // If undefined at this point, then there was error previously\n      return (\n        <Alert color=\"danger\">\n          Failed to load data. Please try again later.\n          </Alert>\n      )\n    }\n\n    let awardsItems = this.props.awardsData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Card>\n            {data.name && <CardHeader tag=\"h3\" className=\"text-center\">{data.name}</CardHeader>}\n            <CardBody className=\"text-center\">\n              {data.description && <CardSubtitle style={{ paddingTop: '8px' }}>{data.description}</CardSubtitle>}\n              <p style={{ paddingTop: '15px' }}>Awarded:</p>\n              {data.awarded && this.separateAwarded(data.awarded)}\n            </CardBody>\n          </Card>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {awardsItems}\n      </ListGroup>\n    )\n  }\n}\n\nexport default Awards;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  authDomain: \"personalwebsite2019-d87ab.firebaseapp.com\",\n  databaseURL: \"https://personalwebsite2019-d87ab.firebaseio.com\",\n  projectId: \"personalwebsite2019-d87ab\",\n  storageBucket: \"gs://personalwebsite2019-d87ab.appspot.com/\",\n  messagingSenderId: \"870102134037\",\n  appId: \"1:870102134037:web:0b714c8e3e279024\"\n};\n\nclass Firebase {\n  constructor() {\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    // Load in the firebase functions we need\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n    this.experienceRef = this.db.collection('experiences');\n    this.projectsRef = this.db.collection('projects');\n    this.socialsRef = this.db.collection('socials');\n    this.clubsRef = this.db.collection('clubs');\n    this.awardsRef = this.db.collection('awards');\n    this.storageRef = firebase.storage().ref();\n  }\n\n  handleSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  handleSignOut = () => this.auth.signOut();\n\n  getCurrentUser = () => this.auth.currentUser;\n\n  isUserLoggedIn = () => !!this.auth.currentUser;\n}\n\nconst fb = new Firebase();\n\nexport default fb;","import React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\nimport Iframe from 'react-iframe'\nimport fb from '../firebase';\n\nclass Resume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      downloadUrl: undefined,\n      error: undefined,\n    }\n  }\n\n  loadFile = async () => {\n    // Create a reference to the file we want to download\n    const resumeRef = fb.storageRef.child('BrianChanResume.pdf');\n    let errorStatus = false;\n    let dUrl;\n    // Get the download URL\n    await resumeRef.getDownloadURL().then(url => {\n      dUrl = url;\n    }).catch(error => {\n      console.error(error);\n      errorStatus = error.code;\n    });\n\n    this.setState({\n      downloadUrl: dUrl,\n      error: errorStatus,\n    });\n  }\n\n  render() {\n    if (!this.state.downloadUrl && !this.state.error) {\n      this.loadFile();\n    }\n\n    if (this.state.error) {\n      return (\n        <Alert color=\"danger\">\n          An error has occurred with loading the pdf. Please try again later.\n        </Alert>\n      )\n    }\n\n    return (\n      <Iframe url={this.state.downloadUrl}\n        width=\"100%\"\n        height={window.innerHeight}\n        display=\"initial\"\n        padding-top=\"60px\"\n        position=\"relative\" />\n    )\n  }\n}\n\nexport default Resume;","// eslint-disable-next-line\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const emailValidator = (email) => {\n    return emailRegex.test(email);\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from 'reactstrap';\nimport fb from '../firebase';\nimport { emailValidator } from '../scripts/validators';\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      invalidEmail: '',\n      invalidPassword: '',\n    };\n  }\n\n  onSubmit = async (event) => {\n    const { email, password } = this.state;\n\n    // Validators\n    if (emailValidator(email.toLowerCase())) {\n      fb.handleSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log('success');\n        this.props.history.push('/admin-edit');\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        console.log('error', error);\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === 'auth/wrong-password') {\n          this.setState({\n            invalidPassword: errorMessage,\n          })\n        } else if (\n          errorCode === 'auth/invalid-email' ||\n          errorCode === 'auth/user-disabled' ||\n          errorCode === 'auth/user-not-found'\n        ) {\n          this.setState({\n            invalidEmail: errorMessage,\n          })\n        }\n      });\n    } else {\n      this.setState({\n        invalidEmail: 'This does not look like an email address. Please try again.',\n      })\n    } \n    event.preventDefault();   \n  }\n\n  handleChange = (event) => {\n    this.setState({\n      invalidEmail: '',\n      invalidPassword: '',\n      [event.target.id]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Form>\n        <FormGroup>\n          <Label for=\"email\">Admin Email</Label>\n          {\n            this.state.invalidEmail !== '' ?\n            <Input invalid type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} /> :\n            <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n          } \n          {this.state.invalidEmail !== '' && <FormFeedback>{this.state.invalidEmail}</FormFeedback>}   \n        </FormGroup>\n        <FormGroup>\n          <Label for=\"password\">Admin Password</Label>\n          {\n            this.state.invalidPassword !== '' ?\n            <Input invalid type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} /> :\n            <Input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n          } \n          {this.state.invalidPassword !== '' && <FormFeedback>{this.state.invalidPassword}</FormFeedback>}  \n        </FormGroup>\n        <Button onClick={this.onSubmit}>Submit</Button>\n      </Form>\n    )\n  }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass ExperienceForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = this.props.fbRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await this.props.fbRef.doc(id).delete()\n    .then(() => {\n      console.log(\"Successfully deleted \", id);\n    })\n    .catch((err) => {\n      console.error(\"Error deleting document: \", err);\n    })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await this.props.fbRef.add(firebaseUpdateObject)\n    .then((docRef) => {\n      console.log(\"Document written with id \", docRef.id);\n    })\n    .catch((err) => {\n      console.error(\"Error adding new document: \", err);\n    })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"location\">Location</Label>\n              <Input type=\"text\" name=\"location\" id={\"location\" + newName} placeholder={item ? item.data['location'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"start_date\">Start Date</Label>\n              <Input type=\"text\" name=\"start_date\" id={\"start_date\" + newName} placeholder={item ? item.data['start_date'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"end_date\">End Date</Label>\n              <Input type=\"text\" name=\"end_date\" id={\"end_date\" + newName} placeholder={item ? item.data['end_date'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input type=\"text\" name=\"title\" id={\"title\" + newName} placeholder={item ? item.data['title'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"order\">Order</Label>\n              <Input type=\"number\" name=\"order\" id={\"order\" + newName} placeholder={item ? item.data['order'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input type=\"textarea\" name=\"description\" id={\"description\" + newName} placeholder={item ? item.data['description'] : \"\"} onChange={this.handleChange} />\n        </FormGroup>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default ExperienceForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { stringToArr } from '../scripts/strings';\n\nclass ProjectsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectsData: undefined,\n      project: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    this.getProjectsData();\n  }\n\n  getProjectsData = async () => {\n    let projectsData = [];\n    await fb.projectsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        const { repo_names } = items[0].data;\n        projectsData = stringToArr(repo_names);\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        projectsData = undefined;\n      });\n\n    this.setState({\n      projectsData,\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  addProject = async (name) => {\n    const { projectsData, project } = this.state;\n    const allProjsStr = projectsData.toString() + ',' + project;\n\n    let itemRef = fb.projectsRef.doc('gvLzW1opI0tLlKf6PQua');\n    try {\n      await itemRef.update({ repo_names: allProjsStr });\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n\n    this.setState({\n      project: \"\",\n      projectsData: projectsData.concat(stringToArr(project))\n    })\n  }\n\n  removeProject = async (name) => {\n    const remainingData = this.state.projectsData.filter(i => i !== name);\n    // update firebase reference with remainingData\n\n    let itemRef = fb.projectsRef.doc('gvLzW1opI0tLlKf6PQua');\n    try {\n      await itemRef.update({ repo_names: remainingData.toString() });\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n\n    this.setState({\n      projectsData: remainingData\n    });\n  }\n\n  render() {\n    let projectEditable = this.state.projectsData &&\n      this.state.projectsData.map((item, idx) => {\n        return (\n          <div key={idx}>\n            <Row form>\n              <Col md={6}><h3>{item}</h3></Col>\n              <Col md={6}><Button onClick={() => this.removeProject(item)}>Delete</Button></Col>\n            </Row>\n          </div>\n        );\n      })\n\n    return (\n      <Form>\n        {projectEditable}\n        <Row form>\n          <Col md={6}><Input type=\"text\" name=\"project\" id=\"project\" placeholder=\"Add new project\" onChange={this.handleChange} value={this.state.project} /></Col>\n          <Col md={6}><Button onClick={() => this.addProject()}>Add Project</Button></Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nexport default ProjectsForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass SocialsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.socialsRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.socialsRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.socialsRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"icon\">Icon</Label>\n              <Input type=\"text\" name=\"icon\" id={\"icon\" + newName} placeholder={item ? item.data['icon'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={12}>\n            <FormGroup>\n              <Label for=\"link\">Link</Label>\n              <Input type=\"text\" name=\"link\" id={\"link\" + newName} placeholder={item ? item.data['link'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default SocialsForm;","import React, { Component } from 'react';\nimport { Button, Alert } from 'reactstrap';\nimport fb from '../firebase';\n\nclass ResumeForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noFile: true,\n            success: false,\n        };\n    }\n\n    checkFile = () => {\n        // check to see if there even is a file selected\n        if (document.getElementById('file').files.length === 0) {\n            this.setState({ noFile: true, });\n        }\n\n        this.setState({ noFile: false, success: false, });\n    }\n\n    handleSubmit = async () => {\n        if (this.state.noFile) {\n            return;\n        }\n        // select the one and only selected file\n        const file = document.getElementById('file').files[0];\n        const resumeRef = fb.storageRef.child('BrianChanResume.pdf');\n        await resumeRef.put(file).then(function (snapshot) {\n            console.log('Uploaded file successfully');\n        });\n        this.setState({\n            success: true,\n        });\n    }\n\n    render() {\n        // Use the name without spaces for unique key for form id's\n        return (\n            <div className='upload-resume'>\n                {this.state.success && <Alert color=\"success\">File upload successful.</Alert>}\n                {this.state.noFile && <Alert color=\"danger\">No file currently selected for upload.</Alert>}\n                <input type='file'\n                    id='file'\n                    className='input-file'\n                    accept='.pdf'\n                    onChange={this.checkFile}\n                />\n                <Button onClick={this.handleSubmit}>Update</Button>\n            </div>\n        );\n    }\n}\n\nexport default ResumeForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass AwardsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.awardsRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.awardsRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.awardsRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Award Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"desc\">Award Description</Label>\n              <Input type=\"text\" name=\"description\" id={\"description\" + newName} placeholder={item ? item.data['description'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"current\">Order</Label>\n              <Input type=\"number\" name=\"order\" id={\"order\" + newName} placeholder={item ? item.data['order'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"current\">Awarded when</Label>\n              <Input type=\"text\" name=\"awarded\" id={\"awarded\" + newName} placeholder={item ? item.data['awarded'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default AwardsForm;","import React, { Component } from 'react';\nimport {\n  Form,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport ExperienceForm from '../components/ExperienceForm';\nimport ProjectsForm from '../components/ProjectsForm';\nimport SocialsForm from '../components/SocialsForm';\nimport ResumeForm from '../components/ResumeForm';\nimport AwardsForm from '../components/AwardsForm';\nimport fb from '../firebase';\nimport '../App.css'\nimport { sortPriority, sortAlpha, } from '../scripts/strings';\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      experienceData: undefined,\n      socialsData: undefined,\n      coursesData: undefined,\n      clubsData: undefined,\n      awardsData: undefined,\n      projectsData: undefined,\n    };\n  }\n\n  getExperienceData = async () => {\n    let experienceData = [];\n    await fb.experienceRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        experienceData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        experienceData = undefined;\n      });\n\n    this.setState({\n      experienceData,\n    })\n  }\n\n  getSocialsData = async () => {\n    let socialsData = [];\n    await fb.socialsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortAlpha(items);\n        socialsData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        socialsData = undefined;\n      });\n\n    this.setState({\n      socialsData,\n    })\n  }\n\n  getAwardsData = async () => {\n    let awardsData = [];\n\n    await fb.awardsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        awardsData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        awardsData = undefined;\n      });\n\n    this.setState({\n      awardsData,\n    })\n  }\n\n  getClubsData = async () => {\n    let clubsData = [];\n    await fb.clubsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        clubsData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        clubsData = undefined;\n      });\n\n    this.setState({\n      clubsData,\n    })\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  onSubmit = (event) => {\n    fb.handleSignOut().then(() => {\n      console.log('Successfully logged out');\n      this.props.history.push('/');\n    }).catch((error) => {\n      console.error('Sign out error: ', error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    let experienceDBForm =\n      this.state.experienceData\n        ?\n        this.state.experienceData.map((item) =>\n          <ExperienceForm key={item.id} item={item} fbRef={fb.experienceRef} />\n        )\n        :\n        <div>\n          <Button onClick={this.getExperienceData}>Load Experience Stored Data</Button>\n        </div>\n\n    let socialsDBForm =\n      this.state.socialsData\n        ?\n        this.state.socialsData.map((item) =>\n          <SocialsForm key={item.id} item={item} />\n        )\n        :\n        <div>\n          <Button onClick={this.getSocialsData}>Load Socials Stored Data</Button>\n        </div>\n\n    let clubsDBForm =\n      this.state.clubsData\n        ?\n        this.state.clubsData.map((item) =>\n          <ExperienceForm key={item.id} item={item} fbRef={fb.clubsRef} />\n        )\n        :\n        <div>\n          <Button onClick={this.getExperienceData}>Load Clubs Stored Data</Button>\n        </div>\n\n    let awardsDBForm = this.state.awardsData\n      ?\n      this.state.awardsData.map((item) =>\n        <AwardsForm key={item.id} item={item} />\n      )\n      :\n      <div>\n        <Button onClick={this.getAwardsData}>Load Awards Stored Data</Button>\n      </div>\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Home\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Experience\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3' })}\n              onClick={() => { this.toggle('3'); }}\n            >\n              Projects\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '5' })}\n              onClick={() => { this.toggle('5'); }}\n            >\n              Extracurriculars\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '6' })}\n              onClick={() => { this.toggle('6'); }}\n            >\n              Skills\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '7' })}\n              onClick={() => { this.toggle('7'); }}\n            >\n              Resume\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '8' })}\n              onClick={() => { this.toggle('8'); }}\n            >\n              Socials\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '9' })}\n              onClick={() => { this.toggle('9'); }}\n            >\n              Awards\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '10' })}\n              onClick={() => { this.toggle('10'); }}\n            >\n              Sign Out\n          </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <h1>Home Edit</h1>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {experienceDBForm}\n              {/* New form if you want to add something new */}\n              {this.state.activeTab === '2' && <ExperienceForm addition={true} fbRef={fb.experienceRef} />}\n            </div>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <ProjectsForm />\n          </TabPane>\n          <TabPane tabId=\"5\">\n            {clubsDBForm}\n            {this.state.activeTab === '5' && <ExperienceForm addition={true} fbRef={fb.clubsRef} />}\n          </TabPane>\n          <TabPane tabId=\"6\">\n            <h1>Skills edit</h1>\n          </TabPane>\n          <TabPane tabId=\"7\">\n            <div>\n              <ResumeForm />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"8\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {socialsDBForm}\n              {/* New form if you want to add something new */}\n              {this.state.activeTab === '8' && <SocialsForm addition={true} />}\n            </div>\n          </TabPane>\n          <TabPane tabId=\"9\">\n            {awardsDBForm}\n            {this.state.activeTab === '9' && <AwardsForm addition={true} />}\n          </TabPane>\n          <TabPane tabId=\"10\">\n            <Form>\n              <Button onClick={this.onSubmit}>Sign Out</Button>\n            </Form>\n          </TabPane>\n        </TabContent>\n      </div>\n    )\n  }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarBrand,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport fb from '../firebase';\n\nclass NavHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      // user: undefined,\n    });\n  }\n\n  // Handles the large view navbar\n  // If navbar is large, isOpen is false, so we do not want to toggle\n  // However, if it's in mobile then isOpen is true and we do want to toggle\n  toggleCond = () => {\n    if (this.state.isOpen) {\n      this.setState({\n        isOpen: false,\n      });\n    }\n  }\n\n  componentDidMount() {\n    fb.auth.onAuthStateChanged((user) => {\n      if (user) {\n        // console.log('user is logged in');\n        this.setState({\n          user: user,\n        });\n      } else {\n        // console.log('user is not logged in');\n        this.setState({\n          user: undefined,\n        })\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"light\" light fixed=\"top\" expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">Brian Chan</NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              {/* <NavLink to=\"/experience/\">Experience</NavLink> */}\n              <NavLink tag={Link} to=\"/experience/\" onClick={this.toggleCond}>Experience</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/projects/\" onClick={this.toggleCond}>Projects</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Education\n                </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/courses/\" onClick={this.toggleCond}>Relevant Coursework</NavLink>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/clubs/\" onClick={this.toggleCond}>Extracurriculars</NavLink>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/awards/\" onClick={this.toggleCond}>Awards</NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <NavItem>\n              <NavLink tag={Link} to=\"/skills/\" onClick={this.toggleCond}>Skills</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/resume/\" onClick={this.toggleCond}>Resume</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/contacts/\" onClick={this.toggleCond}>Contact Me</NavLink>\n            </NavItem>\n            {\n              fb.isUserLoggedIn() &&\n              <NavItem>\n                <NavLink tag={Link} to=\"/admin-edit/\" onClick={this.toggleCond}>Edit</NavLink>\n              </NavItem>\n            }\n          </Nav>\n        </Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default NavHeader;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Edit from '../screens/edit'\nimport fb from '../firebase';\n\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return (\n          fb.isUserLoggedIn() ?\n            <Edit {...props} /> :\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }} />\n        );\n      }}\n    />\n  );\n};\n","const courseData = [\n    {\n      \"id\": \"8z38sjj7dSNpqGLAJgyx\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"AP Computer Science A\",\n        \"name\": \"-\"\n      }\n    },\n    {\n      \"id\": \"z0Jz6IXpNZ7gqm3Lcf3C\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Operating Systems Principles\",\n        \"name\": \"CS 111\"\n      }\n    },\n    {\n      \"id\": \"2Ck9sfZp8GC13C0AQXTe\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Computer Network Fundamentals\",\n        \"name\": \"CS 118\"\n      }\n    },\n    {\n      \"id\": \"EPBsaACZ9kdCsHkhzvBn\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Software Engineering\",\n        \"name\": \"CS 130\"\n      }\n    },\n    {\n      \"id\": \"NEUjo7QVueiSPJhrhR8C\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Introduction to Artificial Intelligence\",\n        \"name\": \"CS 161\"\n      }\n    },\n    {\n      \"id\": \"gP6LuLzw5jvN5PEceedt\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Computer Graphics\",\n        \"name\": \"CS 174A\"\n      }\n    },\n    {\n      \"id\": \"ZuWwjdgYRSn5ZscrEIKa\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Introduction to Algorithms and Complexity\",\n        \"name\": \"CS 180\"\n      }\n    },\n    {\n      \"id\": \"K0mNQBiKDhxJHhm2ujkL\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Intro to Computer Science\",\n        \"name\": \"CS 31 and 32\"\n      }\n    },\n    {\n      \"id\": \"27ZosQgOTBup1TElDHZW\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Introduction to Computer Organization\",\n        \"name\": \"CS 33\"\n      }\n    },\n    {\n      \"id\": \"X6s69VuO1x91115t8vaZ\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Software Construction Laboratory\",\n        \"name\": \"CS 35L\"\n      }\n    },\n    {\n      \"id\": \"MLu9aI83QJrRLbd8ZY4d\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Computer Networks: Physical Layer\",\n        \"name\": \"CS M117\"\n      }\n    },\n    {\n      \"id\": \"NqZZrUgqBTwsIGMng2jk\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Computer Systems Architecture\",\n        \"name\": \"CS M151B\"\n      }\n    },\n    {\n      \"id\": \"0xBbpPzLBQCOYH0NPTWK\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Introductory Digital Design Laboratory\",\n        \"name\": \"CS M152A\"\n      }\n    },\n    {\n      \"id\": \"avrhUEys0QO9NF09cHRS\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Logic Design of Digital Systems\",\n        \"name\": \"CS M51A\"\n      }\n    },\n    {\n      \"id\": \"0MUyAtlmeKjVyKhclKX8\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Electrical and Electronic Circuits\",\n        \"name\": \"EE 100\"\n      }\n    },\n    {\n      \"id\": \"5wJMk5lGpAZXpzXz64Ud\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Systems and Signals\",\n        \"name\": \"EE 102\"\n      }\n    },\n    {\n      \"id\": \"C9fRXTjQDXS5OqyNDhgN\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Introduction to Electrical Engineering\",\n        \"name\": \"EE 3\"\n      }\n    },\n    {\n      \"id\": \"QQ7BJjqr1aLgxyEBgtHN\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Calculus of Several Variables\",\n        \"name\": \"Math 32A and B\"\n      }\n    },\n    {\n      \"id\": \"j6goOsqFJnc4axClOdWc\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Linear Algebra and Applications\",\n        \"name\": \"Math 33A\"\n      }\n    },\n    {\n      \"id\": \"OZw6xAlCxUYuoCeWOVf5\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Differential Equations\",\n        \"name\": \"Math 33B\"\n      }\n    },\n    {\n      \"id\": \"gx2XBpfzsKaDZlnAWofs\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Introduction to Discrete Structures\",\n        \"name\": \"Math 61\"\n      }\n    },\n    {\n      \"id\": \"n4ZenlZ8ru3WP0L8e8bG\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Mechanics\",\n        \"name\": \"Physics 1A\"\n      }\n    },\n    {\n      \"id\": \"Xwgb1dNDix8z2NsE1SG0\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Oscillations, Waves, E&M\",\n        \"name\": \"Physics 1B\"\n      }\n    },\n    {\n      \"id\": \"W1bdOFUVWncF94KgSQNx\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Electrodynamics, Optics, and Special Relativity\",\n        \"name\": \"Physics 1C\"\n      }\n    },\n    {\n      \"id\": \"pVz2ybck4Og278pUJDU0\",\n      \"data\": {\n        \"current\": \"0\",\n        \"desc\": \"Physics Laboratory: Mechanics\",\n        \"name\": \"Physics 4AL\"\n      }\n    },\n    {\n        \"id\": \"hRinfwgMW2dwJsYasbIc\",\n        \"data\": {\n          \"current\": \"0\",\n          \"desc\": \"Digital Electronic Circuits\",\n          \"name\": \"EE 115C\"\n        }\n      }\n  ];\n\n  export default courseData;","import React, { Component } from 'react';\nimport {\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from './screens/home';\nimport Experience from './screens/experience';\nimport Projects from './screens/projects';\nimport Contacts from './screens/contacts';\nimport Courses from './screens/courses';\nimport Awards from './screens/awards';\nimport Resume from './screens/resume';\nimport Admin from './screens/admin';\nimport Edit from './screens/edit';\nimport NavHeader from './components/navheader';\nimport { PrivateRoute } from './components/privateroute';\nimport fb from './firebase';\nimport courseData from './courseData';\nimport { sortPriority, sortAlpha, stringToArr } from './scripts/strings';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      awardsData: [],\n      socialsData: [],\n      currentCoursesData: [],\n      completedCoursesData: [],\n      clubsData: [],\n      experienceData: [],\n      projectsData: [],\n    }\n  }\n\n  async componentDidMount() {\n    fb.auth.onAuthStateChanged((user) => {\n      if (user) {\n        // console.log('user is logged in');\n      }\n    });\n\n    // TODO: Use github API /users endpoint to get the profile picture\n  }\n\n  getProjectsData = async () => {\n    let projectsData = [];\n    let filteredRepos = [];\n\n    await fb.projectsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        filteredRepos = items;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        filteredRepos = undefined;\n      });\n\n    // if we cannot get the filtered repos then we should immediately end\n    if (!filteredRepos) {\n      projectsData = undefined;\n    } else {\n      const filteredStr = filteredRepos[0].data['repo_names'];\n      // get the array of projects we want to display\n      const filteredArr = stringToArr(filteredStr);\n      await fetch('https://api.github.com/users/brianc725/repos')\n        .then(data => data.json())\n        .then(data => {\n          // filter down the desired information\n          projectsData = data.filter(i => filteredArr.includes(i.name));\n        })\n        .catch(err => {\n          console.error('Error getting data', err);\n          projectsData = undefined;\n        })\n    }\n\n    this.setState({\n      projectsData,\n    })\n  }\n\n  // No longer using firebase due to amount of reads... Plus this data is\n  // not going to change anymore after graduation.\n  getCoursesData = async () => {\n    let currentCoursesData = [];\n    let completedCoursesData = [];\n\n    let sorted = sortAlpha(courseData);\n    sorted.forEach(item => {\n      if (item.data['current'] === '0') {\n        completedCoursesData.push(item);\n      } else {\n        currentCoursesData.push(item);\n      }\n    });\n\n    this.setState({\n      currentCoursesData,\n      completedCoursesData,\n    })\n  }\n\n  getExperienceData = async () => {\n    let experienceData = [];\n\n    await fb.experienceRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        experienceData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        experienceData = undefined;\n      });\n\n    this.setState({\n      experienceData,\n    })\n  }\n\n  getSocialsData = async () => {\n    let socialsData = [];\n\n    await fb.socialsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortAlpha(items);\n        socialsData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        socialsData = undefined;\n      });\n\n    this.setState({\n      socialsData,\n    })\n  }\n\n  getAwardsData = async () => {\n    let awardsData = [];\n\n    await fb.awardsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        awardsData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        awardsData = undefined;\n      });\n\n    this.setState({\n      awardsData,\n    })\n  }\n\n  getClubsData = async () => {\n    let clubsData = [];\n    await fb.clubsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        clubsData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        clubsData = undefined;\n      });\n\n    this.setState({\n      clubsData,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <NavHeader />\n        <div className=\"site_container\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route\n              path=\"/experience/\"\n              render={() =>\n                <Experience\n                  allData={this.state.experienceData}\n                  getData={this.getExperienceData} />}\n            />\n            <Route\n              path=\"/projects/\"\n              render={() =>\n                <Projects\n                  allData={this.state.projectsData}\n                  getData={this.getProjectsData} />}\n            />\n            <Route\n              path=\"/courses/\"\n              render={() =>\n                <Courses\n                  getData={this.getCoursesData}\n                  currentCoursesData={this.state.currentCoursesData}\n                  completedCoursesData={this.state.completedCoursesData} />}\n            />\n            <Route\n              path=\"/clubs/\"\n              render={() =>\n                <Experience\n                  allData={this.state.clubsData}\n                  getData={this.getClubsData} />}\n            />\n            <Route\n              path=\"/awards/\"\n              render={() =>\n                <Awards\n                  awardsData={this.state.awardsData}\n                  getData={this.getAwardsData} />}\n            />\n            <Route\n              path=\"/contacts/\"\n              render={() =>\n                <Contacts\n                  socialsData={this.state.socialsData}\n                  getData={this.getSocialsData} />}\n            />\n            <Route path=\"/resume/\" component={Resume} />\n            {/* Admin portal */}\n            <Route path=\"/admin/\" exact component={Admin} />\n            <PrivateRoute path='/admin-edit' component={Edit} />\n            {/* 404 redirect to Home */}\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}