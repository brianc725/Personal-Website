{"version":3,"sources":["screens/home.js","screens/experience.js","screens/projects.js","screens/contacts.js","screens/courses.js","screens/awards.js","firebase.js","screens/resume.js","scripts/validators.js","screens/admin.js","scripts/strings.js","components/ExperienceForm.js","components/SocialsForm.js","components/ResumeForm.js","components/CoursesForm.js","components/AwardsForm.js","screens/edit.js","components/navheader.js","components/privateroute.js","App.js","serviceWorker.js","index.js"],"names":["Home","generateOpener","hour","Date","getHours","opener","this","Jumbotron","Component","Experience","undefined","props","allData","Alert","color","experienceItems","map","item","data","ListGroupItem","key","id","Card","CardBody","className","name","CardHeader","tag","title","CardTitle","style","paddingTop","start_date","end_date","CardSubtitle","location","description","CardText","ListGroup","Projects","Contacts","socialsData","socialItems","Media","href","link","target","rel","icon","left","object","src","alt","Course","desc","Courses","toggle","tab","state","activeTab","setState","currentCoursesData","completedCoursesData","Nav","tabs","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","length","Awards","separateAwarded","awarded","items","split","i","trim","flush","awardsData","awardsItems","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fb","handleSignInWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","handleSignOut","signOut","getCurrentUser","currentUser","isUserLoggedIn","firebase","initializeApp","db","firestore","experienceRef","collection","projectsRef","socialsRef","coursesRef","clubsRef","awardsRef","storageRef","storage","ref","Resume","loadFile","a","resumeRef","child","errorStatus","getDownloadURL","then","url","dUrl","catch","error","console","code","downloadUrl","width","height","window","innerHeight","display","padding-top","position","emailRegex","emailValidator","test","Admin","onSubmit","event","toLowerCase","log","history","push","errorCode","errorMessage","message","invalidPassword","invalidEmail","preventDefault","handleChange","value","Form","FormGroup","Label","for","Input","invalid","type","onChange","FormFeedback","Button","nameNoSpace","replace","sortAlpha","sort","b","localeCompare","sortPriority","Number","order","ExperienceForm","handleUpdate","newName","addition","firebaseUpdateObject","Object","entries","fbKey","itemRef","fbRef","doc","update","handleDelete","delete","err","handleNewSubmission","add","docRef","Row","form","Col","md","placeholder","sm","SocialsForm","ResumeForm","checkFile","document","getElementById","files","noFile","success","handleSubmit","file","put","snapshot","accept","CoursesForm","AwardsForm","Edit","experienceData","coursesData","clubsData","get","forEach","experienceDBForm","Spinner","socialsDBForm","coursesDBForm","clubsDBForm","awardsDBForm","NavHeader","isOpen","toggleCond","onAuthStateChanged","user","Navbar","light","fixed","expand","NavbarBrand","Link","to","NavbarToggler","Collapse","navbar","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","PrivateRoute","component","rest","render","pathname","from","App","isLoading","clubData","sorted","path","exact","Boolean","hostname","match","ReactDOM","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d2e5af1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, } from 'reactstrap';\n\nclass Home extends Component {\n  generateOpener = () => {\n    var date = new Date();\n    var hour = date.getHours(); //gets hour in 24 hour format\n\n    if (hour >= 18) { //6pm to midnight\n      return \"Good Evening, I'm Brian!\";\n    } else if (hour >= 12) { //12pm to 6pm\n      return \"Good Afternoon, I'm Brian!\";\n    } else if (hour >= 0) { //midnight to 12pm\n      return \"Good Morning, I'm Brian!\";\n    } else { //if the date can't be accessed for whatever reason\n      return \"Hello, I'm Brian!\";\n    }\n  }\n\n  render() {\n    const opener = this.generateOpener();\n\n    return (\n      <div>\n        <Jumbotron>\n          <h1>{opener}</h1>\n          <h4>I am currently a fourth year Computer Science and Engineering\n            major at University of California, Los Angeles.\n          </h4>\n          <hr />\n          <p>Besides learning how to code, I enjoy photography and traveling.</p>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Alert,\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  CardHeader,\n} from 'reactstrap';\n\nclass Experience extends Component {\n\n  render() {\n    if (this.props.allData === undefined) {\n      return (\n        <Alert color=\"danger\">\n          Failed to load data. Please try again later.\n          </Alert>\n      )\n    }\n\n    let experienceItems = this.props.allData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Card>\n            <CardBody className=\"text-center\">\n              {data.name && <CardHeader tag=\"h3\">{data.name}</CardHeader>}\n              {data.title && <CardTitle tag=\"h5\" style={{ paddingTop: '8px' }}>{data.title}</CardTitle>}\n              {data.start_date && data.end_date && <CardSubtitle><em>{data.start_date} - {data.end_date}</em></CardSubtitle>}\n              {data.location && <CardSubtitle><small><em>{data.location}</em></small></CardSubtitle>}\n              {data.description && <CardText>{data.description}</CardText>}\n            </CardBody>\n          </Card>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {experienceItems}\n      </ListGroup>\n    );\n  }\n}\n\nexport default Experience;","import React, { Component } from 'react';\n\nclass Projects extends Component {\n  render() {\n    return (\n        <h1>Projects Screen</h1>\n    )\n  }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Media, Alert } from 'reactstrap';\nimport '../styles/contactsStyles.css';\nimport '../App.css';\n\nclass Contacts extends Component {\n  render() {\n    if (this.props.socialsData === undefined) {\n        return (\n          <Alert color=\"danger\">\n            Failed to load data. Please try again later.\n          </Alert>\n        )\n    }\n\n    let socialItems = this.props.socialsData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Media href={data.link ? data.link : '#'} target=\"_blank\" rel=\"noopener noreferrer\" className=\"media-all\">\n            {\n              item.data.icon &&\n              <Media left>\n                <Media object src={data.icon} alt={data.name ? data.name : 'company icon'} className=\"icon-img\" />\n              </Media>\n            }\n            <h3 className=\"icon-name\">{data.name}</h3>\n          </Media>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {socialItems}\n      </ListGroup>\n    )\n  }\n}\n\nexport default Contacts;","import React, { Component } from 'react';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Alert,\n} from 'reactstrap';\nimport classnames from 'classnames';\n\nconst Course = (props) => {\n  const { data } = props;\n  return (<><h3>{data.name}</h3><h5>{data.desc}</h5><hr /></>);\n}\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n    };\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.currentCoursesData && !this.props.completedCoursesData) {\n      return (\n        <Alert color=\"danger\">\n          Failed to load data. Please try again later.\n        </Alert>\n      )\n    }\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Completed Courses\n                        </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Current Courses\n                    </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            {\n              this.props.completedCoursesData.length !== 0\n                ?\n                this.props.completedCoursesData.map(item => <Course key={item.id} data={item.data} />)\n                :\n                'Something went wrong...'\n            }\n          </TabPane>\n          <TabPane tabId=\"2\">\n            {\n              this.props.currentCoursesData.length !== 0\n                ?\n                this.props.currentCoursesData.map(item => <Course key={item.id} data={item.data} />)\n                :\n                'There are no relevant classes that I am currently taking.'\n            }\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default Courses;","import React, { Component } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Alert,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardHeader,\n} from 'reactstrap';\nimport '../App.css';\n\nclass Awards extends Component {\n  // Given the data.awarded string in format \"F 18, F 19\", return list comp.\n  // separating them\n  separateAwarded = (awarded) => {\n    const arr = awarded.split(',');\n    const trimmed = arr.map(i => i.trim());\n    let items = trimmed.map(item => {\n      return (\n        <ListGroupItem key={item}>{item}</ListGroupItem>\n      );\n    });\n    return (\n      <ListGroup flush>{items}</ListGroup>\n    );\n  }\n\n  render() {\n    // If undefined at this point, then there was error previously\n    if (this.props.awardsData === undefined) {\n      return (\n        <Alert color=\"danger\">\n          Failed to load data. Please try again later.\n          </Alert>\n      )\n    }\n\n    let awardsItems = this.props.awardsData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Card>\n            <CardBody className=\"text-center\">\n              {data.name && <CardHeader tag=\"h3\">{data.name}</CardHeader>}\n              {data.description && <CardSubtitle style={{ paddingTop: '8px' }}>{data.description}</CardSubtitle>}\n              <p style={{ paddingTop: '15px' }}>Awarded:</p>\n              {data.awarded && this.separateAwarded(data.awarded)}\n            </CardBody>\n          </Card>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {awardsItems}\n      </ListGroup>\n    )\n  }\n}\n\nexport default Awards;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  authDomain: \"personalwebsite2019-d87ab.firebaseapp.com\",\n  databaseURL: \"https://personalwebsite2019-d87ab.firebaseio.com\",\n  projectId: \"personalwebsite2019-d87ab\",\n  storageBucket: \"gs://personalwebsite2019-d87ab.appspot.com/\",\n  messagingSenderId: \"870102134037\",\n  appId: \"1:870102134037:web:0b714c8e3e279024\"\n};\n\nclass Firebase {\n  constructor() {\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    // Load in the firebase functions we need\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n    this.experienceRef = this.db.collection('experiences');\n    this.projectsRef = this.db.collection('projects');\n    this.socialsRef = this.db.collection('socials');\n    this.coursesRef = this.db.collection('courses');\n    this.clubsRef = this.db.collection('clubs');\n    this.awardsRef = this.db.collection('awards');\n    this.storageRef = firebase.storage().ref();\n  }\n\n  handleSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  handleSignOut = () => this.auth.signOut();\n\n  getCurrentUser = () => this.auth.currentUser;\n\n  isUserLoggedIn = () => !!this.auth.currentUser;\n}\n\nconst fb = new Firebase();\n\nexport default fb;","import React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\nimport Iframe from 'react-iframe'\nimport fb from '../firebase';\n\nclass Resume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      downloadUrl: undefined,\n      error: undefined,\n    }\n  }\n\n  loadFile = async () => {\n    // Create a reference to the file we want to download\n    const resumeRef = fb.storageRef.child('BrianChanResume.pdf');\n    let errorStatus = false;\n    let dUrl;\n    // Get the download URL\n    await resumeRef.getDownloadURL().then(url => {\n      dUrl = url;\n    }).catch(error => {\n      console.error(error);\n      errorStatus = error.code;\n    });\n\n    this.setState({\n      downloadUrl: dUrl,\n      error: errorStatus,\n    });\n  }\n\n  render() {\n    if (!this.state.downloadUrl && !this.state.error) {\n      this.loadFile();\n    }\n\n    if (this.state.error) {\n      return (\n        <Alert color=\"danger\">\n          An error has occurred with loading the pdf. Please try again later.\n        </Alert>\n      )\n    }\n\n    return (\n      <Iframe url={this.state.downloadUrl}\n        width=\"100%\"\n        height={window.innerHeight}\n        display=\"initial\"\n        padding-top=\"60px\"\n        position=\"relative\" />\n    )\n  }\n}\n\nexport default Resume;","// eslint-disable-next-line\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const emailValidator = (email) => {\n    return emailRegex.test(email);\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from 'reactstrap';\nimport fb from '../firebase';\nimport { emailValidator } from '../scripts/validators';\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      invalidEmail: '',\n      invalidPassword: '',\n    };\n  }\n\n  onSubmit = async (event) => {\n    const { email, password } = this.state;\n\n    // Validators\n    if (emailValidator(email.toLowerCase())) {\n      fb.handleSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log('success');\n        this.props.history.push('/admin-edit');\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        console.log('error', error);\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === 'auth/wrong-password') {\n          this.setState({\n            invalidPassword: errorMessage,\n          })\n        } else if (\n          errorCode === 'auth/invalid-email' ||\n          errorCode === 'auth/user-disabled' ||\n          errorCode === 'auth/user-not-found'\n        ) {\n          this.setState({\n            invalidEmail: errorMessage,\n          })\n        }\n      });\n    } else {\n      this.setState({\n        invalidEmail: 'This does not look like an email address. Please try again.',\n      })\n    } \n    event.preventDefault();   \n  }\n\n  handleChange = (event) => {\n    this.setState({\n      invalidEmail: '',\n      invalidPassword: '',\n      [event.target.id]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Form>\n        <FormGroup>\n          <Label for=\"email\">Admin Email</Label>\n          {\n            this.state.invalidEmail !== '' ?\n            <Input invalid type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} /> :\n            <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n          } \n          {this.state.invalidEmail !== '' && <FormFeedback>{this.state.invalidEmail}</FormFeedback>}   \n        </FormGroup>\n        <FormGroup>\n          <Label for=\"password\">Admin Password</Label>\n          {\n            this.state.invalidPassword !== '' ?\n            <Input invalid type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} /> :\n            <Input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n          } \n          {this.state.invalidPassword !== '' && <FormFeedback>{this.state.invalidPassword}</FormFeedback>}  \n        </FormGroup>\n        <Button onClick={this.onSubmit}>Submit</Button>\n      </Form>\n    )\n  }\n}\n\nexport default Admin;","export const nameNoSpace = (name) => {\n    return name.replace(/\\s/g, '');\n}\n\nexport const sortAlpha = (items) => {\n    return items.sort((a,b) => {\n        return a['data'].name.toLowerCase().localeCompare(b['data'].name.toLowerCase());\n    });\n}\n\n// sorts from highest number to lowest\nexport const sortPriority = (items) => {\n    return items.sort((a,b) => {\n        return Number(b['data'].order)-Number(a['data'].order);\n    });\n}","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass ExperienceForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = this.props.fbRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await this.props.fbRef.doc(id).delete()\n    .then(() => {\n      console.log(\"Successfully deleted \", id);\n    })\n    .catch((err) => {\n      console.error(\"Error deleting document: \", err);\n    })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await this.props.fbRef.add(firebaseUpdateObject)\n    .then((docRef) => {\n      console.log(\"Document written with id \", docRef.id);\n    })\n    .catch((err) => {\n      console.error(\"Error adding new document: \", err);\n    })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"location\">Location</Label>\n              <Input type=\"text\" name=\"location\" id={\"location\" + newName} placeholder={item ? item.data['location'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"start_date\">Start Date</Label>\n              <Input type=\"text\" name=\"start_date\" id={\"start_date\" + newName} placeholder={item ? item.data['start_date'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"end_date\">End Date</Label>\n              <Input type=\"text\" name=\"end_date\" id={\"end_date\" + newName} placeholder={item ? item.data['end_date'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input type=\"text\" name=\"title\" id={\"title\" + newName} placeholder={item ? item.data['title'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"order\">Order</Label>\n              <Input type=\"number\" name=\"order\" id={\"order\" + newName} placeholder={item ? item.data['order'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input type=\"textarea\" name=\"description\" id={\"description\" + newName} placeholder={item ? item.data['description'] : \"\"} onChange={this.handleChange} />\n        </FormGroup>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default ExperienceForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass SocialsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.socialsRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.socialsRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.socialsRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"icon\">Icon</Label>\n              <Input type=\"text\" name=\"icon\" id={\"icon\" + newName} placeholder={item ? item.data['icon'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={12}>\n            <FormGroup>\n              <Label for=\"link\">Link</Label>\n              <Input type=\"text\" name=\"link\" id={\"link\" + newName} placeholder={item ? item.data['link'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default SocialsForm;","import React, { Component } from 'react';\nimport { Button, Alert } from 'reactstrap';\nimport fb from '../firebase';\n\nclass ResumeForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noFile: true,\n            success: false,\n        };\n    }\n\n    checkFile = () => {\n        // check to see if there even is a file selected\n        if (document.getElementById('file').files.length === 0) {\n            this.setState({ noFile: true, });\n        }\n\n        this.setState({ noFile: false, success: false, });\n    }\n\n    handleSubmit = async () => {\n        if (this.state.noFile) {\n            return;\n        }\n        // select the one and only selected file\n        const file = document.getElementById('file').files[0];\n        const resumeRef = fb.storageRef.child('BrianChanResume.pdf');\n        await resumeRef.put(file).then(function (snapshot) {\n            console.log('Uploaded file successfully');\n        });\n        this.setState({\n            success: true,\n        });\n    }\n\n    render() {\n        // Use the name without spaces for unique key for form id's\n        return (\n            <div className='upload-resume'>\n                {this.state.success && <Alert color=\"success\">File upload successful.</Alert>}\n                {this.state.noFile && <Alert color=\"danger\">No file currently selected for upload.</Alert>}\n                <input type='file'\n                    id='file'\n                    className='input-file'\n                    accept='.pdf'\n                    onChange={this.checkFile}\n                />\n                <Button onClick={this.handleSubmit}>Update</Button>\n            </div>\n        );\n    }\n}\n\nexport default ResumeForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass CoursesForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.coursesRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.coursesRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.coursesRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Course Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"desc\">Course Description</Label>\n              <Input type=\"text\" name=\"desc\" id={\"desc\" + newName} placeholder={item ? item.data['desc'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"current\">Current</Label>\n              <Input type=\"number\" name=\"current\" id={\"current\" + newName} placeholder={item ? item.data['current'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default CoursesForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass AwardsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.awardsRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.awardsRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.awardsRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Award Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"desc\">Award Description</Label>\n              <Input type=\"text\" name=\"description\" id={\"description\" + newName} placeholder={item ? item.data['description'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"current\">Order</Label>\n              <Input type=\"number\" name=\"order\" id={\"order\" + newName} placeholder={item ? item.data['order'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"current\">Awarded when</Label>\n              <Input type=\"text\" name=\"awarded\" id={\"awarded\" + newName} placeholder={item ? item.data['awarded'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default AwardsForm;","import React, { Component } from 'react';\nimport {\n  Form,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  Spinner\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport ExperienceForm from '../components/ExperienceForm';\nimport SocialsForm from '../components/SocialsForm';\nimport ResumeForm from '../components/ResumeForm';\nimport CoursesForm from '../components/CoursesForm';\nimport AwardsForm from '../components/AwardsForm';\nimport fb from '../firebase';\nimport '../App.css'\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      experienceData: undefined,\n      socialsData: undefined,\n      coursesData: undefined,\n      clubsData: undefined,\n      awardsData: undefined,\n    };\n  }\n\n  componentDidMount() {\n    fb.experienceRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          experienceData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.socialsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          socialsData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.coursesRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          coursesData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.clubsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          clubsData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.awardsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          awardsData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  onSubmit = (event) => {\n    fb.handleSignOut().then(() => {\n      console.log('Successfully logged out');\n      this.props.history.push('/');\n    }).catch((error) => {\n      console.error('Sign out error: ', error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    let experienceDBForm =\n      this.state.experienceData\n        ?\n        this.state.experienceData.map((item) =>\n          <ExperienceForm key={item.id} item={item} fbRef={fb.experienceRef} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let socialsDBForm =\n      this.state.socialsData\n        ?\n        this.state.socialsData.map((item) =>\n          <SocialsForm key={item.id} item={item} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let coursesDBForm =\n      this.state.coursesData\n        ?\n        this.state.coursesData.map((item) =>\n          <CoursesForm key={item.id} item={item} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let clubsDBForm =\n      this.state.clubsData\n        ?\n        this.state.clubsData.map((item) =>\n          <ExperienceForm key={item.id} item={item} fbRef={fb.clubsRef} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let awardsDBForm = this.state.awardsData\n      ?\n      this.state.awardsData.map((item) =>\n        <AwardsForm key={item.id} item={item} />\n      )\n      :\n      <div>\n        <Spinner color=\"primary\" className=\"spinner-center\" />\n      </div>\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Home\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Experience\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3' })}\n              onClick={() => { this.toggle('3'); }}\n            >\n              Projects\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '4' })}\n              onClick={() => { this.toggle('4'); }}\n            >\n              Coursework\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '5' })}\n              onClick={() => { this.toggle('5'); }}\n            >\n              Extracurriculars\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '6' })}\n              onClick={() => { this.toggle('6'); }}\n            >\n              Skills\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '7' })}\n              onClick={() => { this.toggle('7'); }}\n            >\n              Resume\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '8' })}\n              onClick={() => { this.toggle('8'); }}\n            >\n              Socials\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '9' })}\n              onClick={() => { this.toggle('9'); }}\n            >\n              Awards\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '10' })}\n              onClick={() => { this.toggle('10'); }}\n            >\n              Sign Out\n          </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <h1>Home Edit</h1>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {experienceDBForm}\n              {/* New form if you want to add something new */}\n              <ExperienceForm addition={true} fbRef={fb.experienceRef} />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <h1>Projects edit</h1>\n          </TabPane>\n          <TabPane tabId=\"4\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {coursesDBForm}\n              {/* New form if you want to add something new */}\n              <CoursesForm addition={true} />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"5\">\n            {clubsDBForm}\n            <ExperienceForm addition={true} fbRef={fb.clubsRef} />\n          </TabPane>\n          <TabPane tabId=\"6\">\n            <h1>Skills edit</h1>\n          </TabPane>\n          <TabPane tabId=\"7\">\n            <div>\n              <ResumeForm />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"8\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {socialsDBForm}\n              {/* New form if you want to add something new */}\n              <SocialsForm addition={true} />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"9\">\n            {awardsDBForm}\n            <AwardsForm addition={true} />\n          </TabPane>\n          <TabPane tabId=\"10\">\n            <Form>\n              <Button onClick={this.onSubmit}>Sign Out</Button>\n            </Form>\n          </TabPane>\n        </TabContent>\n      </div>\n    )\n  }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarBrand,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport fb from '../firebase';\n\nclass NavHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      // user: undefined,\n    });\n  }\n\n  // Handles the large view navbar\n  // If navbar is large, isOpen is false, so we do not want to toggle\n  // However, if it's in mobile then isOpen is true and we do want to toggle\n  toggleCond = () => {\n    if (this.state.isOpen) {\n      this.setState({\n        isOpen: false,\n      });\n    }\n  }\n\n  componentDidMount() {\n    fb.auth.onAuthStateChanged((user) => {\n      if (user) {\n        // console.log('user is logged in');\n        this.setState({\n          user: user,\n        });\n      } else {\n        // console.log('user is not logged in');\n        this.setState({\n          user: undefined,\n        })\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"light\" light fixed=\"top\" expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">Brian Chan</NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              {/* <NavLink to=\"/experience/\">Experience</NavLink> */}\n              <NavLink tag={Link} to=\"/experience/\" onClick={this.toggleCond}>Experience</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/projects/\" onClick={this.toggleCond}>Projects</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Education\n                </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/courses/\" onClick={this.toggleCond}>Relevant Coursework</NavLink>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/clubs/\" onClick={this.toggleCond}>Extracurriculars</NavLink>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/awards/\" onClick={this.toggleCond}>Awards</NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <NavItem>\n              <NavLink tag={Link} to=\"/skills/\" onClick={this.toggleCond}>Skills</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/resume/\" onClick={this.toggleCond}>Resume</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/contacts/\" onClick={this.toggleCond}>Contact Me</NavLink>\n            </NavItem>\n            {\n              fb.isUserLoggedIn() &&\n              <NavItem>\n                <NavLink tag={Link} to=\"/admin-edit/\" onClick={this.toggleCond}>Edit</NavLink>\n              </NavItem>\n            }\n          </Nav>\n        </Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default NavHeader;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Edit from '../screens/edit'\nimport fb from '../firebase';\n\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return (\n          fb.isUserLoggedIn() ?\n            <Edit {...props} /> :\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }} />\n        );\n      }}\n    />\n  );\n};\n","import React, { Component } from 'react';\nimport {\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport { Spinner } from 'reactstrap';\nimport Home from './screens/home';\nimport Experience from './screens/experience';\nimport Projects from './screens/projects';\nimport Contacts from './screens/contacts';\nimport Courses from './screens/courses';\nimport Awards from './screens/awards';\nimport Resume from './screens/resume';\nimport Admin from './screens/admin';\nimport Edit from './screens/edit';\nimport NavHeader from './components/navheader';\nimport { PrivateRoute } from './components/privateroute';\nimport fb from './firebase';\nimport { sortPriority, sortAlpha } from './scripts/strings';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      awardsData: undefined,\n      socialsData: undefined,\n      currentCoursesData: undefined,\n      completedCoursesData: undefined,\n      isLoading: true,\n    }\n  }\n\n  async componentDidMount() {\n    fb.auth.onAuthStateChanged((user) => {\n      if (user) {\n        // console.log('user is logged in');\n      }\n    });\n\n    let awardsData = [];\n    let socialsData = [];\n    let currentCoursesData = [];\n    let completedCoursesData = [];\n    let experienceData = [];\n    let clubData = [];\n\n    await fb.awardsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        awardsData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        awardsData = undefined;\n      });\n\n    await fb.socialsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortAlpha(items);\n        socialsData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        socialsData = undefined;\n      });\n\n    await fb.coursesRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortAlpha(items);\n        sorted.forEach(item => {\n          if (item.data['current'] === '0') {\n            completedCoursesData.push(item);\n          } else {\n            currentCoursesData.push(item);\n          }\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        currentCoursesData = undefined;\n        completedCoursesData = undefined;\n      });\n\n    await fb.experienceRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortAlpha(items);\n        experienceData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        experienceData = undefined;\n      });\n\n    await fb.clubsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortAlpha(items);\n        clubData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        clubData = undefined;\n      });\n\n    this.setState({\n      awardsData,\n      socialsData,\n      currentCoursesData,\n      completedCoursesData,\n      experienceData,\n      clubData,\n      isLoading: false,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <NavHeader />\n        {\n          this.state.isLoading\n            ?\n            <div>\n              <Spinner color=\"primary\" className=\"spinner-center\" />\n            </div>\n            :\n            <div className=\"site_container\">\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route\n                  path=\"/experience/\"\n                  render={() =>\n                    <Experience allData={this.state.experienceData} />}\n                />\n                <Route path=\"/projects/\" component={Projects} />\n                <Route\n                  path=\"/courses/\"\n                  render={() =>\n                    <Courses\n                      currentCoursesData={this.state.currentCoursesData}\n                      completedCoursesData={this.state.completedCoursesData} />}\n                />\n                <Route\n                  path=\"/clubs/\"\n                  render={() =>\n                    <Experience allData={this.state.clubData} />}\n                />\n                <Route\n                  path=\"/awards/\"\n                  render={() =>\n                    <Awards\n                      awardsData={this.state.awardsData} />}\n                />\n                <Route\n                  path=\"/contacts/\"\n                  render={() =>\n                    <Contacts socialsData={this.state.socialsData} />}\n                />\n                <Route path=\"/resume/\" component={Resume} />\n                {/* Admin portal */}\n                <Route path=\"/admin/\" exact component={Admin} />\n                <PrivateRoute path='/admin-edit' component={Edit} />\n                {/* 404 redirect to Home */}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}