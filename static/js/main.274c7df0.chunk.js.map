{"version":3,"sources":["screens/home.js","scripts/strings.js","screens/experience.js","screens/projects.js","screens/contacts.js","firebase.js","screens/courses.js","screens/awards.js","screens/resume.js","scripts/validators.js","screens/admin.js","components/ExperienceForm.js","components/SocialsForm.js","components/ResumeForm.js","components/CoursesForm.js","components/AwardsForm.js","screens/edit.js","components/navheader.js","components/privateroute.js","App.js","serviceWorker.js","index.js"],"names":["Home","generateOpener","hour","Date","getHours","opener","this","Jumbotron","Component","nameNoSpace","name","replace","sortAlpha","items","sort","a","b","toLowerCase","localeCompare","sortPriority","Number","order","Experience","props","state","experienceData","undefined","error","fbRef","get","then","snapshot","forEach","doc","item","id","data","push","sorted","setState","catch","err","console","Alert","color","Spinner","className","experienceItems","map","ListGroupItem","key","Card","CardBody","CardHeader","tag","title","CardTitle","style","paddingTop","start_date","end_date","CardSubtitle","location","description","CardText","ListGroup","Projects","Contacts","socialsData","socialItems","Media","href","link","target","rel","icon","left","object","src","alt","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fb","handleSignInWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","handleSignOut","signOut","getCurrentUser","currentUser","isUserLoggedIn","firebase","initializeApp","db","firestore","experienceRef","collection","projectsRef","socialsRef","coursesRef","clubsRef","awardsRef","storageRef","storage","ref","Course","desc","Courses","toggle","tab","activeTab","currentCoursesData","completedCoursesData","Nav","tabs","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","length","Awards","separateAwarded","awarded","split","i","trim","flush","awardsData","awardsItems","Resume","loadFile","resumeRef","child","errorStatus","getDownloadURL","url","dUrl","code","downloadUrl","width","height","window","innerHeight","display","padding-top","position","emailRegex","emailValidator","test","Admin","onSubmit","event","log","history","errorCode","errorMessage","message","invalidPassword","invalidEmail","preventDefault","handleChange","value","Form","FormGroup","Label","for","Input","invalid","type","onChange","FormFeedback","Button","ExperienceForm","handleUpdate","newName","addition","firebaseUpdateObject","Object","entries","fbKey","itemRef","update","handleDelete","delete","handleNewSubmission","add","docRef","Row","form","Col","md","placeholder","sm","SocialsForm","ResumeForm","checkFile","document","getElementById","files","noFile","success","handleSubmit","file","put","accept","CoursesForm","AwardsForm","Edit","coursesData","clubsData","experienceDBForm","socialsDBForm","coursesDBForm","clubsDBForm","awardsDBForm","NavHeader","isOpen","toggleCond","onAuthStateChanged","user","Navbar","light","fixed","expand","NavbarBrand","Link","to","NavbarToggler","Collapse","navbar","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","PrivateRoute","component","rest","render","pathname","from","App","componentDidMount","isLoading","path","exact","Boolean","hostname","match","ReactDOM","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6WAqCeA,E,2MAjCbC,eAAiB,WACf,IACIC,GADO,IAAIC,MACCC,WAEhB,OAAIF,GAAQ,GACH,2BACEA,GAAQ,GACV,6BACEA,GAAQ,EACV,2BAEA,qB,wEAKT,IAAMG,EAASC,KAAKL,iBAEpB,OACE,6BACE,kBAACM,EAAA,EAAD,KACE,4BAAKF,GACL,6IAGA,6BACA,qG,GA3BSG,a,yECHNC,EAAc,SAACC,GACxB,OAAOA,EAAKC,QAAQ,MAAO,KAGlBC,EAAY,SAACC,GACtB,OAAOA,EAAMC,KAAK,SAACC,EAAEC,GACjB,OAAOD,EAAC,KAASL,KAAKO,cAAcC,cAAcF,EAAC,KAASN,KAAKO,kBAK5DE,EAAe,SAACN,GACzB,OAAOA,EAAMC,KAAK,SAACC,EAAEC,GACjB,OAAOI,OAAOJ,EAAC,KAASK,OAAOD,OAAOL,EAAC,KAASM,UC4EzCC,E,YAzEb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,oBAAgBC,EAChBC,WAAOD,GAJQ,E,iFAQE,IAAD,OAClBpB,KAAKiB,MAAMK,MAAMC,MACdC,KAAK,SAAAC,GACJ,IAAIlB,EAAQ,GACZkB,EAASC,QAAQ,SAAAC,GACf,IAAIC,EAAO,CACTC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,QAEZvB,EAAMwB,KAAKH,KAEb,IAAII,EAASnB,EAAaN,GAC1B,EAAK0B,SAAS,CACZd,eAAgBa,MAEjBE,MAAM,SAAAC,GAEPC,QAAQf,MAAM,0BAA2Bc,GACzC,EAAKF,SAAS,CACZZ,MAAOc,Q,+BAMb,QAAkCf,IAA9BpB,KAAKkB,MAAMC,eACb,OAAInB,KAAKkB,MAAMG,MAEX,kBAACgB,EAAA,EAAD,CAAOC,MAAM,UAAb,gDAMF,6BACE,kBAACC,EAAA,EAAD,CAASD,MAAM,UAAUE,UAAU,oBAKzC,IAAIC,EAAkBzC,KAAKkB,MAAMC,eAAeuB,IAAI,SAACd,GAAU,IACrDE,EAASF,EAATE,KACR,OACE,kBAACa,EAAA,EAAD,CAAeC,IAAKhB,EAAKC,IACvB,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUN,UAAU,eACjBV,EAAK1B,MAAQ,kBAAC2C,EAAA,EAAD,CAAYC,IAAI,MAAMlB,EAAK1B,MACxC0B,EAAKmB,OAAS,kBAACC,EAAA,EAAD,CAAWF,IAAI,KAAKG,MAAO,CAAEC,WAAY,QAAUtB,EAAKmB,OACtEnB,EAAKuB,YAAcvB,EAAKwB,UAAY,kBAACC,EAAA,EAAD,KAAc,4BAAKzB,EAAKuB,WAAV,MAAyBvB,EAAKwB,WAChFxB,EAAK0B,UAAY,kBAACD,EAAA,EAAD,KAAc,+BAAO,4BAAKzB,EAAK0B,YAChD1B,EAAK2B,aAAe,kBAACC,EAAA,EAAD,KAAW5B,EAAK2B,kBAO/C,OACE,kBAACE,EAAA,EAAD,KACGlB,O,GApEgBvC,aCLV0D,E,iLANX,OACI,mD,GAHe1D,a,QCsCR2D,G,6LAjCX,QAA+BzC,IAA3BpB,KAAKiB,MAAM6C,YACX,OACE,kBAACzB,EAAA,EAAD,CAAOC,MAAM,UAAb,gDAMN,IAAIyB,EAAc/D,KAAKiB,MAAM6C,YAAYpB,IAAI,SAACd,GAAU,IAC9CE,EAASF,EAATE,KACR,OACE,kBAACa,EAAA,EAAD,CAAeC,IAAKhB,EAAKC,IACvB,kBAACmC,EAAA,EAAD,CAAOC,KAAMnC,EAAKoC,KAAOpC,EAAKoC,KAAO,IAAKC,OAAO,SAASC,IAAI,sBAAsB5B,UAAU,aAE1FZ,EAAKE,KAAKuC,MACV,kBAACL,EAAA,EAAD,CAAOM,MAAI,GACT,kBAACN,EAAA,EAAD,CAAOO,QAAM,EAACC,IAAK1C,EAAKuC,KAAMI,IAAK3C,EAAK1B,KAAO0B,EAAK1B,KAAO,eAAgBoC,UAAU,cAGzF,wBAAIA,UAAU,aAAaV,EAAK1B,UAMxC,OACE,kBAACuD,EAAA,EAAD,KACGI,O,GA7Bc7D,c,2ECAjBwE,G,kBAAiB,CACrBC,OAAQC,0CACRC,WAAY,4CACZC,YAAa,mDACbC,UAAW,4BACXC,cAAe,8CACfC,kBAAmB,eACnBC,MAAO,wCA+BMC,EAFJ,IAzBT,aAAe,IAAD,gCAedC,iCAAmC,SAACC,EAAOC,GAAR,OACjC,EAAKC,KAAKC,2BAA2BH,EAAOC,IAhBhC,KAkBdG,cAAgB,kBAAM,EAAKF,KAAKG,WAlBlB,KAoBdC,eAAiB,kBAAM,EAAKJ,KAAKK,aApBnB,KAsBdC,eAAiB,mBAAQ,EAAKN,KAAKK,aApBjCE,IAASC,cAAcrB,GAEvB1E,KAAKuF,KAAOO,IAASP,OACrBvF,KAAKgG,GAAKF,IAASG,YACnBjG,KAAKkG,cAAgBlG,KAAKgG,GAAGG,WAAW,eACxCnG,KAAKoG,YAAcpG,KAAKgG,GAAGG,WAAW,YACtCnG,KAAKqG,WAAarG,KAAKgG,GAAGG,WAAW,WACrCnG,KAAKsG,WAAatG,KAAKgG,GAAGG,WAAW,WACrCnG,KAAKuG,SAAWvG,KAAKgG,GAAGG,WAAW,SACnCnG,KAAKwG,UAAYxG,KAAKgG,GAAGG,WAAW,UACpCnG,KAAKyG,WAAaX,IAASY,UAAUC,OCfnCC,EAAS,SAAC3F,GAAW,IACjBa,EAASb,EAATa,KACR,OAAQ,oCAAE,4BAAKA,EAAK1B,MAAU,4BAAK0B,EAAK+E,MAAU,+BA2GrCC,E,YAvGb,WAAY7F,GAAQ,IAAD,8BACjB,4CAAMA,KA0CR8F,OAAS,SAACC,GACJ,EAAK9F,MAAM+F,YAAcD,GAC3B,EAAK/E,SAAS,CACZgF,UAAWD,KA5Cf,EAAK9F,MAAQ,CACX+F,UAAW,IACXC,wBAAoB9F,EACpB+F,0BAAsB/F,GALP,E,iFASE,IAAD,OAClB+D,EAAGmB,WAAW/E,MACXC,KAAK,SAAAC,GACJ,IAAIlB,EAAQ,GACZkB,EAASC,QAAQ,SAAAC,GACf,IAAIC,EAAO,CACTC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,QAEZvB,EAAMwB,KAAKH,KAEb,IAAII,EAAS1B,EAAUC,GACjB2G,EAAqB,GACrBC,EAAuB,GAC7BnF,EAAON,QAAQ,SAAAE,GACgB,MAAzBA,EAAKE,KAAL,QACFqF,EAAqBpF,KAAKH,GAE1BsF,EAAmBnF,KAAKH,KAG5B,EAAKK,SAAS,CACZiF,qBACAC,2BAEDjF,MAAM,SAAAC,GAEPC,QAAQf,MAAM,0BAA2Bc,GACzC,EAAKF,SAAS,CACZZ,MAAOc,Q,+BAaL,IAAD,OACP,OAAKnC,KAAKkB,MAAMgG,oBAAuBlH,KAAKkB,MAAMiG,qBAOhD,6BACE,kBAACC,EAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,sBAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,qBAQJ,kBAACY,EAAA,EAAD,CAAYV,UAAWjH,KAAKkB,MAAM+F,WAChC,kBAACW,EAAA,EAAD,CAASC,MAAM,KAEgC,IAA3C7H,KAAKkB,MAAMiG,qBAAqBW,OAE9B9H,KAAKkB,MAAMiG,qBAAqBzE,IAAI,SAAAd,GAAI,OAAI,kBAAC,EAAD,CAAQgB,IAAKhB,EAAKC,GAAIC,KAAMF,EAAKE,SAE7E,2BAGN,kBAAC8F,EAAA,EAAD,CAASC,MAAM,KAE8B,IAAzC7H,KAAKkB,MAAMgG,mBAAmBY,OAE5B9H,KAAKkB,MAAMgG,mBAAmBxE,IAAI,SAAAd,GAAI,OAAI,kBAAC,EAAD,CAAQgB,IAAKhB,EAAKC,GAAIC,KAAMF,EAAKE,SAE3E,+DAzCF,6BACN,kBAACS,EAAA,EAAD,CAASD,MAAM,UAAUE,UAAU,wB,GAvDrBtC,aC4CP6H,E,2MA/CbC,gBAAkB,SAACC,GACjB,IAEI1H,EAFQ0H,EAAQC,MAAM,KACNxF,IAAI,SAAAyF,GAAC,OAAIA,EAAEC,SACX1F,IAAI,SAAAd,GACtB,OACE,kBAACe,EAAA,EAAD,KAAgBf,KAGpB,OACE,kBAAC+B,EAAA,EAAD,CAAW0E,OAAK,GAAE9H,I,wEAIZ,IAAD,OAEP,QAA8Ba,IAA1BpB,KAAKiB,MAAMqH,WACb,OACE,kBAACjG,EAAA,EAAD,CAAOC,MAAM,UAAb,gDAMJ,IAAIiG,EAAcvI,KAAKiB,MAAMqH,WAAW5F,IAAI,SAACd,GAAU,IAC7CE,EAASF,EAATE,KACR,OACE,kBAACa,EAAA,EAAD,CAAeC,IAAKhB,EAAKC,IACvB,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUN,UAAU,eACjBV,EAAK1B,MAAQ,kBAAC2C,EAAA,EAAD,CAAYC,IAAI,MAAMlB,EAAK1B,MACxC0B,EAAK2B,aAAe,kBAACF,EAAA,EAAD,CAAcJ,MAAO,CAAEC,WAAY,QAAUtB,EAAK2B,aACvE,uBAAGN,MAAO,CAAEC,WAAY,SAAxB,YACCtB,EAAKmG,SAAW,EAAKD,gBAAgBlG,EAAKmG,cAOrD,OACE,kBAACtE,EAAA,EAAD,KACG4E,O,GA5CYrI,a,QCwCNsI,E,YA/CX,WAAYvH,GAAQ,IAAD,8BACf,4CAAMA,KAOVwH,SARmB,qBAQR,gCAAAhI,EAAA,4DAEDiI,EAAYvD,EAAGsB,WAAWkC,MAAM,uBAClCC,GAAc,EAHX,SAMDF,EAAUG,iBAAiBrH,KAAK,SAAAsH,GAClCC,EAAOD,IACR5G,MAAM,SAAAb,GACLe,QAAQf,MAAMA,GACduH,EAAcvH,EAAM2H,OAVjB,OAaP,EAAK/G,SAAS,CACVgH,YAAaF,EACb1H,MAAOuH,IAfJ,yCANP,EAAK1H,MAAQ,CACT+H,iBAAa7H,EACbC,WAAOD,GAJI,E,sEAgCf,OAJKpB,KAAKkB,MAAM+H,aAAgBjJ,KAAKkB,MAAMG,OACvCrB,KAAKyI,WAGLzI,KAAKkB,MAAMG,MACH,mGAIR,kBAAC,IAAD,CAAQyH,IAAK9I,KAAKkB,MAAM+H,YACpBC,MAAM,OACNC,OAAQC,OAAOC,YACfC,QAAQ,UACRC,cAAY,OACZC,SAAS,iB,GA3CJtJ,a,iECHfuJ,GAAa,0JAENC,GAAiB,SAACrE,GAC3B,OAAOoE,GAAWE,KAAKtE,IC2FZuE,G,YAlFb,WAAY3I,GAAQ,IAAD,8BACjB,4CAAMA,KASR4I,SAVmB,sCAUR,WAAOC,GAAP,mBAAArJ,EAAA,uDACmB,EAAKS,MAAzBmE,EADC,EACDA,MAAOC,EADN,EACMA,SAGXoE,GAAerE,EAAM1E,eACvBwE,EAAGC,iCAAiCC,EAAOC,GAC1C9D,KAAK,WACJY,QAAQ2H,IAAI,WACZ,EAAK9I,MAAM+I,QAAQjI,KAAK,iBAEzBG,MAAM,SAACb,GAENe,QAAQ2H,IAAI,QAAS1I,GACrB,IAAI4I,EAAY5I,EAAM2H,KAClBkB,EAAe7I,EAAM8I,QACP,wBAAdF,EACF,EAAKhI,SAAS,CACZmI,gBAAiBF,IAGL,uBAAdD,GACc,uBAAdA,GACc,wBAAdA,GAEA,EAAKhI,SAAS,CACZoI,aAAcH,MAKpB,EAAKjI,SAAS,CACZoI,aAAc,gEAGlBP,EAAMQ,iBAlCG,yCAVQ,wDA+CnBC,aAAe,SAACT,GACd,EAAK7H,SAAL,aACEoI,aAAc,GACdD,gBAAiB,IAChBN,EAAM3F,OAAOtC,GAAKiI,EAAM3F,OAAOqG,SAjDlC,EAAKtJ,MAAQ,CACXmE,MAAO,GACPC,SAAU,GACV+E,aAAc,GACdD,gBAAiB,IANF,E,sEAwDjB,OACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,eAE8B,KAA5B5K,KAAKkB,MAAMmJ,aACX,kBAACQ,GAAA,EAAD,CAAOC,SAAO,EAACC,KAAK,QAAQ3K,KAAK,QAAQyB,GAAG,QAAQmJ,SAAUhL,KAAKuK,eACnE,kBAACM,GAAA,EAAD,CAAOE,KAAK,QAAQ3K,KAAK,QAAQyB,GAAG,QAAQmJ,SAAUhL,KAAKuK,eAEhC,KAA5BvK,KAAKkB,MAAMmJ,cAAuB,kBAACY,GAAA,EAAD,KAAejL,KAAKkB,MAAMmJ,eAE/D,kBAACK,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,YAAX,kBAEiC,KAA/B5K,KAAKkB,MAAMkJ,gBACX,kBAACS,GAAA,EAAD,CAAOC,SAAO,EAACC,KAAK,WAAW3K,KAAK,WAAWyB,GAAG,WAAWmJ,SAAUhL,KAAKuK,eAC5E,kBAACM,GAAA,EAAD,CAAOE,KAAK,WAAW3K,KAAK,WAAWyB,GAAG,WAAWmJ,SAAUhL,KAAKuK,eAEtC,KAA/BvK,KAAKkB,MAAMkJ,iBAA0B,kBAACa,GAAA,EAAD,KAAejL,KAAKkB,MAAMkJ,kBAElE,kBAACc,GAAA,EAAD,CAAQxD,QAAS1H,KAAK6J,UAAtB,e,GA7EY3J,a,6BC4JLiL,G,YAnKb,WAAYlK,GAAQ,IAAD,8BACjB,4CAAMA,KAKRsJ,aAAe,SAACT,GACd,EAAK7H,SAAL,eACG6H,EAAM3F,OAAOtC,GAAKiI,EAAM3F,OAAOqG,SARjB,EAanBY,aAbmB,qBAaJ,8CAAA3K,EAAA,qDAWb,IAVI4K,EAAU,GAEZA,EADE,EAAKpK,MAAMqK,SACH,WAEAnL,EAAY,EAAKc,MAAMW,KAAKE,KAAhB,MAGpByJ,EAAuB,GAG3B,MAAyBC,OAAOC,QAAQ,EAAKvK,OAA7C,eAAsD,EAAD,yBAA3C0B,EAA2C,KAAtC4H,EAAsC,KAE/CkB,EAAQ9I,EAAIvC,QAAQgL,EAAS,IACjCE,EAAqBG,GAASlB,EAdnB,OAgBTmB,EAAU,EAAK1K,MAAMK,MAAMK,IAAI,EAAKV,MAAMW,KAAKC,IAhBtC,kBAkBL8J,EAAQC,OAAOL,GAlBV,OAmBXnJ,QAAQ2H,IAAI,wBAnBD,kDAuBX3H,QAAQf,MAAM,4BAAd,MAvBW,wDAbI,EAyCnBwK,aAzCmB,qBAyCJ,4BAAApL,EAAA,4DAELoB,EAAO,EAAKZ,MAAMW,KAAlBC,GAFK,SAIP,EAAKZ,MAAMK,MAAMK,IAAIE,GAAIiK,SAC9BtK,KAAK,WACJY,QAAQ2H,IAAI,wBAAyBlI,KAEtCK,MAAM,SAACC,GACNC,QAAQf,MAAM,4BAA6Bc,KAThC,yCAzCI,EAuDnB4J,oBAvDmB,qBAuDG,4CAAAtL,EAAA,qDAWpB,IAVI4K,EAAU,GAEZA,EADE,EAAKpK,MAAMqK,SACH,WAEAnL,EAAY,EAAKc,MAAMW,KAAKE,KAAhB,MAGpByJ,EAAuB,GAG3B,MAAyBC,OAAOC,QAAQ,EAAKvK,OAA7C,eAAsD,EAAD,yBAA3C0B,EAA2C,KAAtC4H,EAAsC,KAE/CkB,EAAQ9I,EAAIvC,QAAQgL,EAAS,IACjCE,EAAqBG,GAASlB,EAdZ,gBAgBd,EAAKvJ,MAAMK,MAAM0K,IAAIT,GAC1B/J,KAAK,SAACyK,GACL7J,QAAQ2H,IAAI,4BAA6BkC,EAAOpK,MAEjDK,MAAM,SAACC,GACNC,QAAQf,MAAM,8BAA+Bc,KArB3B,yCArDpB,EAAKjB,MAAQ,GAFI,E,sEAiFjB,IAAImK,EAAU,GACNzJ,EAAS5B,KAAKiB,MAAdW,KAUR,OANEyJ,EADErL,KAAKiB,MAAMqK,SACH,WAEAnL,EAAYyB,EAAKE,KAAL,MAKtB,kBAAC2I,EAAA,EAAD,KACE,kBAACyB,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,OAAOyB,GAAI,OAASwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,KAAoB,GAAIkJ,SAAUhL,KAAKuK,iBAGpH,kBAAC6B,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,WAAWyB,GAAI,WAAawJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,SAAwB,GAAIkJ,SAAUhL,KAAKuK,kBAIlI,kBAAC2B,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,cAAX,cACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,aAAayB,GAAI,aAAewJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,WAA0B,GAAIkJ,SAAUhL,KAAKuK,iBAGtI,kBAAC6B,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,WAAWyB,GAAI,WAAawJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,SAAwB,GAAIkJ,SAAUhL,KAAKuK,kBAIlI,kBAAC2B,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,QAAQyB,GAAI,QAAUwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,MAAqB,GAAIkJ,SAAUhL,KAAKuK,iBAGvH,kBAAC6B,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,SAAS3K,KAAK,QAAQyB,GAAI,QAAUwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,MAAqB,GAAIkJ,SAAUhL,KAAKuK,kBAI3H,kBAACG,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,eACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,WAAW3K,KAAK,cAAcyB,GAAI,cAAgBwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,YAA2B,GAAIkJ,SAAUhL,KAAKuK,gBAGzIvK,KAAKiB,MAAMqK,SAET,kBAACY,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAK+L,qBAAtB,SAIJ,kBAACG,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAKoL,cAAtB,WAEF,kBAACgB,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAK6L,cAAtB,iB,GA3Ja3L,aC6IdsM,G,YA3Ib,WAAYvL,GAAQ,IAAD,8BACjB,4CAAMA,KAKRsJ,aAAe,SAACT,GACd,EAAK7H,SAAL,eACG6H,EAAM3F,OAAOtC,GAAKiI,EAAM3F,OAAOqG,SARjB,EAanBY,aAbmB,qBAaJ,8CAAA3K,EAAA,qDAWb,IAVI4K,EAAU,GAEZA,EADE,EAAKpK,MAAMqK,SACH,WAEAnL,EAAY,EAAKc,MAAMW,KAAKE,KAAhB,MAGpByJ,EAAuB,GAG3B,MAAyBC,OAAOC,QAAQ,EAAKvK,OAA7C,eAAsD,EAAD,yBAA3C0B,EAA2C,KAAtC4H,EAAsC,KAE/CkB,EAAQ9I,EAAIvC,QAAQgL,EAAS,IACjCE,EAAqBG,GAASlB,EAdnB,OAgBTmB,EAAUxG,EAAGkB,WAAW1E,IAAI,EAAKV,MAAMW,KAAKC,IAhBnC,kBAkBL8J,EAAQC,OAAOL,GAlBV,OAmBXnJ,QAAQ2H,IAAI,wBAnBD,kDAuBX3H,QAAQf,MAAM,4BAAd,MAvBW,wDAbI,EAyCnBwK,aAzCmB,qBAyCJ,4BAAApL,EAAA,4DAELoB,EAAO,EAAKZ,MAAMW,KAAlBC,GAFK,SAIPsD,EAAGkB,WAAW1E,IAAIE,GAAIiK,SACzBtK,KAAK,WACJY,QAAQ2H,IAAI,wBAAyBlI,KAEtCK,MAAM,SAACC,GACNC,QAAQf,MAAM,4BAA6Bc,KATlC,yCAzCI,EAuDnB4J,oBAvDmB,qBAuDG,4CAAAtL,EAAA,qDAWpB,IAVI4K,EAAU,GAEZA,EADE,EAAKpK,MAAMqK,SACH,WAEAnL,EAAY,EAAKc,MAAMW,KAAKE,KAAhB,MAGpByJ,EAAuB,GAG3B,MAAyBC,OAAOC,QAAQ,EAAKvK,OAA7C,eAAsD,EAAD,yBAA3C0B,EAA2C,KAAtC4H,EAAsC,KAE/CkB,EAAQ9I,EAAIvC,QAAQgL,EAAS,IACjCE,EAAqBG,GAASlB,EAdZ,gBAgBdrF,EAAGkB,WAAW2F,IAAIT,GACrB/J,KAAK,SAACyK,GACL7J,QAAQ2H,IAAI,4BAA6BkC,EAAOpK,MAEjDK,MAAM,SAACC,GACNC,QAAQf,MAAM,8BAA+Bc,KArB7B,yCArDpB,EAAKjB,MAAQ,GAFI,E,sEAiFjB,IAAImK,EAAU,GACNzJ,EAAS5B,KAAKiB,MAAdW,KAUR,OANEyJ,EADErL,KAAKiB,MAAMqK,SACH,WAEAnL,EAAYyB,EAAKE,KAAL,MAKtB,kBAAC2I,EAAA,EAAD,KACE,kBAACyB,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,OAAOyB,GAAI,OAASwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,KAAoB,GAAIkJ,SAAUhL,KAAKuK,iBAGpH,kBAAC6B,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,OAAOyB,GAAI,OAASwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,KAAoB,GAAIkJ,SAAUhL,KAAKuK,kBAItH,kBAAC2B,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,OAAOyB,GAAI,OAASwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,KAAoB,GAAIkJ,SAAUhL,KAAKuK,kBAKpHvK,KAAKiB,MAAMqK,SAET,kBAACY,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAK+L,qBAAtB,SAIJ,kBAACG,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAKoL,cAAtB,WAEF,kBAACgB,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAK6L,cAAtB,iB,GAnIU3L,aCkDXuM,G,YAlDX,WAAYxL,GAAQ,IAAD,8BACf,4CAAMA,KAOVyL,UAAY,WAE6C,IAAjDC,SAASC,eAAe,QAAQC,MAAM/E,QACtC,EAAK7F,SAAS,CAAE6K,QAAQ,IAG5B,EAAK7K,SAAS,CAAE6K,QAAQ,EAAOC,SAAS,KAdzB,EAiBnBC,aAjBmB,qBAiBJ,8BAAAvM,EAAA,yDACP,EAAKS,MAAM4L,OADJ,wDAKLG,EAAON,SAASC,eAAe,QAAQC,MAAM,GAC7CnE,EAAYvD,EAAGsB,WAAWkC,MAAM,uBAN3B,SAOLD,EAAUwE,IAAID,GAAMzL,KAAK,SAAUC,GACrCW,QAAQ2H,IAAI,gCARL,OAUX,EAAK9H,SAAS,CACV8K,SAAS,IAXF,yCAfX,EAAK7L,MAAQ,CACT4L,QAAQ,EACRC,SAAS,GAJE,E,sEAkCf,OACI,yBAAKvK,UAAU,iBACVxC,KAAKkB,MAAM6L,SAAW,kBAAC1K,EAAA,EAAD,CAAOC,MAAM,WAAb,2BACtBtC,KAAKkB,MAAM4L,QAAU,kBAACzK,EAAA,EAAD,CAAOC,MAAM,UAAb,0CACtB,2BAAOyI,KAAK,OACRlJ,GAAG,OACHW,UAAU,aACV2K,OAAO,OACPnC,SAAUhL,KAAK0M,YAEnB,kBAACxB,GAAA,EAAD,CAAQxD,QAAS1H,KAAKgN,cAAtB,e,GA7CS9M,aC6IVkN,G,YA3Ib,WAAYnM,GAAQ,IAAD,8BACjB,4CAAMA,KAKRsJ,aAAe,SAACT,GACd,EAAK7H,SAAL,eACG6H,EAAM3F,OAAOtC,GAAKiI,EAAM3F,OAAOqG,SARjB,EAanBY,aAbmB,qBAaJ,8CAAA3K,EAAA,qDAWb,IAVI4K,EAAU,GAEZA,EADE,EAAKpK,MAAMqK,SACH,WAEAnL,EAAY,EAAKc,MAAMW,KAAKE,KAAhB,MAGpByJ,EAAuB,GAG3B,MAAyBC,OAAOC,QAAQ,EAAKvK,OAA7C,eAAsD,EAAD,yBAA3C0B,EAA2C,KAAtC4H,EAAsC,KAE/CkB,EAAQ9I,EAAIvC,QAAQgL,EAAS,IACjCE,EAAqBG,GAASlB,EAdnB,OAgBTmB,EAAUxG,EAAGmB,WAAW3E,IAAI,EAAKV,MAAMW,KAAKC,IAhBnC,kBAkBL8J,EAAQC,OAAOL,GAlBV,OAmBXnJ,QAAQ2H,IAAI,wBAnBD,kDAuBX3H,QAAQf,MAAM,4BAAd,MAvBW,wDAbI,EAyCnBwK,aAzCmB,qBAyCJ,4BAAApL,EAAA,4DAELoB,EAAO,EAAKZ,MAAMW,KAAlBC,GAFK,SAIPsD,EAAGmB,WAAW3E,IAAIE,GAAIiK,SACzBtK,KAAK,WACJY,QAAQ2H,IAAI,wBAAyBlI,KAEtCK,MAAM,SAACC,GACNC,QAAQf,MAAM,4BAA6Bc,KATlC,yCAzCI,EAuDnB4J,oBAvDmB,qBAuDG,4CAAAtL,EAAA,qDAWpB,IAVI4K,EAAU,GAEZA,EADE,EAAKpK,MAAMqK,SACH,WAEAnL,EAAY,EAAKc,MAAMW,KAAKE,KAAhB,MAGpByJ,EAAuB,GAG3B,MAAyBC,OAAOC,QAAQ,EAAKvK,OAA7C,eAAsD,EAAD,yBAA3C0B,EAA2C,KAAtC4H,EAAsC,KAE/CkB,EAAQ9I,EAAIvC,QAAQgL,EAAS,IACjCE,EAAqBG,GAASlB,EAdZ,gBAgBdrF,EAAGmB,WAAW0F,IAAIT,GACrB/J,KAAK,SAACyK,GACL7J,QAAQ2H,IAAI,4BAA6BkC,EAAOpK,MAEjDK,MAAM,SAACC,GACNC,QAAQf,MAAM,8BAA+Bc,KArB7B,yCArDpB,EAAKjB,MAAQ,GAFI,E,sEAiFjB,IAAImK,EAAU,GACNzJ,EAAS5B,KAAKiB,MAAdW,KAUR,OANEyJ,EADErL,KAAKiB,MAAMqK,SACH,WAEAnL,EAAYyB,EAAKE,KAAL,MAKtB,kBAAC2I,EAAA,EAAD,KACE,kBAACyB,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,eACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,OAAOyB,GAAI,OAASwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,KAAoB,GAAIkJ,SAAUhL,KAAKuK,iBAGpH,kBAAC6B,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,sBACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,OAAOyB,GAAI,OAASwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,KAAoB,GAAIkJ,SAAUhL,KAAKuK,kBAItH,kBAAC2B,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,WACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,SAAS3K,KAAK,UAAUyB,GAAI,UAAYwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,QAAuB,GAAIkJ,SAAUhL,KAAKuK,kBAK/HvK,KAAKiB,MAAMqK,SAET,kBAACY,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAK+L,qBAAtB,SAIJ,kBAACG,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAKoL,cAAtB,WAEF,kBAACgB,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAK6L,cAAtB,iB,GAnIU3L,aCkJXmN,G,YAjJb,WAAYpM,GAAQ,IAAD,8BACjB,4CAAMA,KAKRsJ,aAAe,SAACT,GACd,EAAK7H,SAAL,eACG6H,EAAM3F,OAAOtC,GAAKiI,EAAM3F,OAAOqG,SARjB,EAanBY,aAbmB,qBAaJ,8CAAA3K,EAAA,qDAWb,IAVI4K,EAAU,GAEZA,EADE,EAAKpK,MAAMqK,SACH,WAEAnL,EAAY,EAAKc,MAAMW,KAAKE,KAAhB,MAGpByJ,EAAuB,GAG3B,MAAyBC,OAAOC,QAAQ,EAAKvK,OAA7C,eAAsD,EAAD,yBAA3C0B,EAA2C,KAAtC4H,EAAsC,KAE/CkB,EAAQ9I,EAAIvC,QAAQgL,EAAS,IACjCE,EAAqBG,GAASlB,EAdnB,OAgBTmB,EAAUxG,EAAGqB,UAAU7E,IAAI,EAAKV,MAAMW,KAAKC,IAhBlC,kBAkBL8J,EAAQC,OAAOL,GAlBV,OAmBXnJ,QAAQ2H,IAAI,wBAnBD,kDAuBX3H,QAAQf,MAAM,4BAAd,MAvBW,wDAbI,EAyCnBwK,aAzCmB,qBAyCJ,4BAAApL,EAAA,4DAELoB,EAAO,EAAKZ,MAAMW,KAAlBC,GAFK,SAIPsD,EAAGqB,UAAU7E,IAAIE,GAAIiK,SACxBtK,KAAK,WACJY,QAAQ2H,IAAI,wBAAyBlI,KAEtCK,MAAM,SAACC,GACNC,QAAQf,MAAM,4BAA6Bc,KATlC,yCAzCI,EAuDnB4J,oBAvDmB,qBAuDG,4CAAAtL,EAAA,qDAWpB,IAVI4K,EAAU,GAEZA,EADE,EAAKpK,MAAMqK,SACH,WAEAnL,EAAY,EAAKc,MAAMW,KAAKE,KAAhB,MAGpByJ,EAAuB,GAG3B,MAAyBC,OAAOC,QAAQ,EAAKvK,OAA7C,eAAsD,EAAD,yBAA3C0B,EAA2C,KAAtC4H,EAAsC,KAE/CkB,EAAQ9I,EAAIvC,QAAQgL,EAAS,IACjCE,EAAqBG,GAASlB,EAdZ,gBAgBdrF,EAAGqB,UAAUwF,IAAIT,GACpB/J,KAAK,SAACyK,GACL7J,QAAQ2H,IAAI,4BAA6BkC,EAAOpK,MAEjDK,MAAM,SAACC,GACNC,QAAQf,MAAM,8BAA+Bc,KArB7B,yCArDpB,EAAKjB,MAAQ,GAFI,E,sEAiFjB,IAAImK,EAAU,GACNzJ,EAAS5B,KAAKiB,MAAdW,KAUR,OANEyJ,EADErL,KAAKiB,MAAMqK,SACH,WAEAnL,EAAYyB,EAAKE,KAAL,MAKtB,kBAAC2I,EAAA,EAAD,KACE,kBAACyB,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,cACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,OAAOyB,GAAI,OAASwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,KAAoB,GAAIkJ,SAAUhL,KAAKuK,iBAGpH,kBAAC6B,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,qBACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,cAAcyB,GAAI,cAAgBwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,YAA2B,GAAIkJ,SAAUhL,KAAKuK,kBAI3I,kBAAC2B,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,SACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,SAAS3K,KAAK,QAAQyB,GAAI,QAAUwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,MAAqB,GAAIkJ,SAAUhL,KAAKuK,iBAGzH,kBAAC6B,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC3B,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,gBACA,kBAACC,GAAA,EAAD,CAAOE,KAAK,OAAO3K,KAAK,UAAUyB,GAAI,UAAYwJ,EAASiB,YAAa1K,EAAOA,EAAKE,KAAL,QAAuB,GAAIkJ,SAAUhL,KAAKuK,kBAK7HvK,KAAKiB,MAAMqK,SAET,kBAACY,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAK+L,qBAAtB,SAIJ,kBAACG,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAKoL,cAAtB,WAEF,kBAACgB,GAAA,EAAD,CAAKG,GAAI,GACP,kBAACrB,GAAA,EAAD,CAAQxD,QAAS1H,KAAK6L,cAAtB,iB,GAzIS3L,aC+UVoN,G,YA/Tb,WAAYrM,GAAQ,IAAD,8BACjB,4CAAMA,KAuGR8F,OAAS,SAACC,GACJ,EAAK9F,MAAM+F,YAAcD,GAC3B,EAAK/E,SAAS,CACZgF,UAAWD,KA3GE,EAgHnB6C,SAAW,SAACC,GACV3E,EAAGM,gBAAgBjE,KAAK,WACtBY,QAAQ2H,IAAI,2BACZ,EAAK9I,MAAM+I,QAAQjI,KAAK,OACvBG,MAAM,SAACb,GACRe,QAAQf,MAAM,mBAAoBA,KAEpCyI,EAAMQ,kBArHN,EAAKpJ,MAAQ,CACX+F,UAAW,IACX9F,oBAAgBC,EAChB0C,iBAAa1C,EACbmM,iBAAanM,EACboM,eAAWpM,EACXkH,gBAAYlH,GARG,E,iFAYE,IAAD,OAClB+D,EAAGe,cAAc3E,MACdC,KAAK,SAAAC,GACJ,IAAIlB,EAAQ,GACZkB,EAASC,QAAQ,SAAAC,GACf,IAAIC,EAAO,CACTC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,QAEZvB,EAAMwB,KAAKH,KAEb,EAAKK,SAAS,CACZd,eAAgBZ,MAEjB2B,MAAM,SAAAC,GAEPC,QAAQf,MAAM,0BAA2Bc,KAG7CgD,EAAGkB,WAAW9E,MACXC,KAAK,SAAAC,GACJ,IAAIlB,EAAQ,GACZkB,EAASC,QAAQ,SAAAC,GACf,IAAIC,EAAO,CACTC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,QAEZvB,EAAMwB,KAAKH,KAEb,EAAKK,SAAS,CACZ6B,YAAavD,MAEd2B,MAAM,SAAAC,GAEPC,QAAQf,MAAM,0BAA2Bc,KAG7CgD,EAAGmB,WAAW/E,MACXC,KAAK,SAAAC,GACJ,IAAIlB,EAAQ,GACZkB,EAASC,QAAQ,SAAAC,GACf,IAAIC,EAAO,CACTC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,QAEZvB,EAAMwB,KAAKH,KAEb,EAAKK,SAAS,CACZsL,YAAahN,MAEd2B,MAAM,SAAAC,GAEPC,QAAQf,MAAM,0BAA2Bc,KAG7CgD,EAAGoB,SAAShF,MACTC,KAAK,SAAAC,GACJ,IAAIlB,EAAQ,GACZkB,EAASC,QAAQ,SAAAC,GACf,IAAIC,EAAO,CACTC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,QAEZvB,EAAMwB,KAAKH,KAEb,EAAKK,SAAS,CACZuL,UAAWjN,MAEZ2B,MAAM,SAAAC,GAEPC,QAAQf,MAAM,0BAA2Bc,KAG7CgD,EAAGqB,UAAUjF,MACVC,KAAK,SAAAC,GACJ,IAAIlB,EAAQ,GACZkB,EAASC,QAAQ,SAAAC,GACf,IAAIC,EAAO,CACTC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,QAEZvB,EAAMwB,KAAKH,KAEb,EAAKK,SAAS,CACZqG,WAAY/H,MAEb2B,MAAM,SAAAC,GAEPC,QAAQf,MAAM,0BAA2Bc,O,+BAsBrC,IAAD,OACHsL,EACFzN,KAAKkB,MAAMC,eAETnB,KAAKkB,MAAMC,eAAeuB,IAAI,SAACd,GAAD,OAC5B,kBAAC,GAAD,CAAgBgB,IAAKhB,EAAKC,GAAID,KAAMA,EAAMN,MAAO6D,EAAGe,kBAGtD,6BACE,kBAAC3D,EAAA,EAAD,CAASD,MAAM,UAAUE,UAAU,oBAGrCkL,EACF1N,KAAKkB,MAAM4C,YAET9D,KAAKkB,MAAM4C,YAAYpB,IAAI,SAACd,GAAD,OACzB,kBAAC,GAAD,CAAagB,IAAKhB,EAAKC,GAAID,KAAMA,MAGnC,6BACE,kBAACW,EAAA,EAAD,CAASD,MAAM,UAAUE,UAAU,oBAGrCmL,EACF3N,KAAKkB,MAAMqM,YAETvN,KAAKkB,MAAMqM,YAAY7K,IAAI,SAACd,GAAD,OACzB,kBAAC,GAAD,CAAagB,IAAKhB,EAAKC,GAAID,KAAMA,MAGnC,6BACE,kBAACW,EAAA,EAAD,CAASD,MAAM,UAAUE,UAAU,oBAGrCoL,EACF5N,KAAKkB,MAAMsM,UAETxN,KAAKkB,MAAMsM,UAAU9K,IAAI,SAACd,GAAD,OACvB,kBAAC,GAAD,CAAgBgB,IAAKhB,EAAKC,GAAID,KAAMA,EAAMN,MAAO6D,EAAGoB,aAGtD,6BACE,kBAAChE,EAAA,EAAD,CAASD,MAAM,UAAUE,UAAU,oBAGrCqL,EAAe7N,KAAKkB,MAAMoH,WAE5BtI,KAAKkB,MAAMoH,WAAW5F,IAAI,SAACd,GAAD,OACxB,kBAAC,GAAD,CAAYgB,IAAKhB,EAAKC,GAAID,KAAMA,MAGlC,6BACE,kBAACW,EAAA,EAAD,CAASD,MAAM,UAAUE,UAAU,oBAGvC,OACE,6BACE,kBAAC4E,EAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,SAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,eAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,aAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,eAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,qBAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,WAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,WAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,YAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,MAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,OAF/B,WAOF,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/E,UAAWgF,IAAW,CAAEC,OAAiC,OAAzBzH,KAAKkB,MAAM+F,YAC3CS,QAAS,WAAQ,EAAKX,OAAO,QAF/B,cAQJ,kBAACY,EAAA,EAAD,CAAYV,UAAWjH,KAAKkB,MAAM+F,WAChC,kBAACW,EAAA,EAAD,CAASC,MAAM,KACb,0CAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,6BAEG4F,EAED,kBAAC,GAAD,CAAgBnC,UAAU,EAAMhK,MAAO6D,EAAGe,kBAG9C,kBAAC0B,EAAA,EAAD,CAASC,MAAM,KACb,8CAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,6BAEG8F,EAED,kBAAC,GAAD,CAAarC,UAAU,MAG3B,kBAAC1D,EAAA,EAAD,CAASC,MAAM,KACZ+F,EACD,kBAAC,GAAD,CAAgBtC,UAAU,EAAMhK,MAAO6D,EAAGoB,YAE5C,kBAACqB,EAAA,EAAD,CAASC,MAAM,KACb,4CAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,6BACE,kBAAC,GAAD,QAGJ,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,6BAEG6F,EAED,kBAAC,GAAD,CAAapC,UAAU,MAG3B,kBAAC1D,EAAA,EAAD,CAASC,MAAM,KACZgG,EACD,kBAAC,GAAD,CAAYvC,UAAU,KAExB,kBAAC1D,EAAA,EAAD,CAASC,MAAM,MACb,kBAAC4C,EAAA,EAAD,KACE,kBAACS,GAAA,EAAD,CAAQxD,QAAS1H,KAAK6J,UAAtB,oB,GAvTK3J,a,yFC2FJ4N,G,YA7Fb,WAAY7M,GAAQ,IAAD,8BACjB,4CAAMA,KAMR8F,OAAS,WACP,EAAK9E,SAAS,CACZ8L,QAAS,EAAK7M,MAAM6M,UATL,EAiBnBC,WAAa,WACP,EAAK9M,MAAM6M,QACb,EAAK9L,SAAS,CACZ8L,QAAQ,KAlBZ,EAAK7M,MAAQ,CACX6M,QAAQ,GAHO,E,iFAyBE,IAAD,OAClB5I,EAAGI,KAAK0I,mBAAmB,SAACC,GACtBA,GACF9L,QAAQ2H,IAAI,qBACZ,EAAK9H,SAAS,CACZiM,KAAMA,MAGR9L,QAAQ2H,IAAI,yBACZ,EAAK9H,SAAS,CACZiM,UAAM9M,S,+BAOZ,OACE,kBAAC+M,GAAA,EAAD,CAAQ7L,MAAM,QAAQ8L,OAAK,EAACC,MAAM,MAAMC,OAAO,MAC7C,kBAACC,GAAA,EAAD,CAAavL,IAAKwL,KAAMC,GAAG,KAA3B,cACA,kBAACC,GAAA,EAAD,CAAehH,QAAS1H,KAAK+G,SAC7B,kBAAC4H,GAAA,EAAD,CAAUZ,OAAQ/N,KAAKkB,MAAM6M,OAAQa,QAAM,GACzC,kBAACxH,EAAA,EAAD,CAAK5E,UAAU,UAAUoM,QAAM,GAC7B,kBAACtH,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAASvE,IAAKwL,KAAMC,GAAG,eAAe/G,QAAS1H,KAAKgO,YAApD,eAEF,kBAAC1G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvE,IAAKwL,KAAMC,GAAG,aAAa/G,QAAS1H,KAAKgO,YAAlD,aAEF,kBAACa,GAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChC,kBAACC,GAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,GAAzB,aAGA,kBAACC,GAAA,EAAD,CAAcC,OAAK,GACjB,kBAACC,GAAA,EAAD,KACE,kBAAC7H,EAAA,EAAD,CAASvE,IAAKwL,KAAMC,GAAG,YAAY/G,QAAS1H,KAAKgO,YAAjD,wBAEF,kBAACoB,GAAA,EAAD,KACE,kBAAC7H,EAAA,EAAD,CAASvE,IAAKwL,KAAMC,GAAG,UAAU/G,QAAS1H,KAAKgO,YAA/C,qBAEF,kBAACoB,GAAA,EAAD,KACE,kBAAC7H,EAAA,EAAD,CAASvE,IAAKwL,KAAMC,GAAG,WAAW/G,QAAS1H,KAAKgO,YAAhD,aAIN,kBAAC1G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvE,IAAKwL,KAAMC,GAAG,WAAW/G,QAAS1H,KAAKgO,YAAhD,WAEF,kBAAC1G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvE,IAAKwL,KAAMC,GAAG,WAAW/G,QAAS1H,KAAKgO,YAAhD,WAEF,kBAAC1G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvE,IAAKwL,KAAMC,GAAG,aAAa/G,QAAS1H,KAAKgO,YAAlD,eAGA7I,EAAGU,kBACH,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvE,IAAKwL,KAAMC,GAAG,eAAe/G,QAAS1H,KAAKgO,YAApD,gB,GApFQ9N,a,SCZXmP,GAAe,SAAC,GAGvB,EAFJC,UAEK,IADFC,EACC,8BACJ,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAvO,GACN,OACEkE,EAAGU,iBACD,kBAAC,GAAS5E,GACV,kBAAC,IAAD,CACEwN,GAAI,CACFgB,SAAU,IACVvO,MAAO,CACLwO,KAAMzO,EAAMuC,kBCoGfmM,G,YAjGb,WAAY1O,GAAQ,IAAD,8BACjB,4CAAMA,KAQR2O,kBATmB,qBASC,8BAAAnP,EAAA,4DAClB0E,EAAGI,KAAK0I,mBAAmB,SAACC,GACtBA,EACF9L,QAAQ2H,IAAI,qBAEZ3H,QAAQ2H,IAAI,2BAIZzB,EAAa,GACbxE,EAAc,GAVA,SAWZqB,EAAGqB,UAAUjF,MAChBC,KAAK,SAAAC,GACJ,IAAIlB,EAAQ,GACZkB,EAASC,QAAQ,SAAAC,GACf,IAAIC,EAAO,CACTC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,QAEZvB,EAAMwB,KAAKH,KAEb,IAAII,EAASnB,EAAaN,GAC1B+H,EAAatG,IACZE,MAAM,SAAAC,GAEPC,QAAQf,MAAM,0BAA2Bc,GACzCmG,OAAalH,IA1BC,uBA6BZ+D,EAAGkB,WAAW9E,MACnBC,KAAK,SAAAC,GACJ,IAAIlB,EAAQ,GACZkB,EAASC,QAAQ,SAAAC,GACf,IAAIC,EAAO,CACTC,GAAIF,EAAIE,GACRC,KAAMH,EAAIG,QAEZvB,EAAMwB,KAAKH,KAEb,IAAII,EAAS1B,EAAUC,GACvBuD,EAAc9B,IACbE,MAAM,SAAAC,GAEPC,QAAQf,MAAM,0BAA2Bc,GACzC2B,OAAc1C,IA5CE,OA+ClB,EAAKa,SAAS,CACZqG,aACAxE,cACA+L,WAAW,IAlDK,yCAPlB,EAAK3O,MAAQ,CACXoH,gBAAYlH,EACZ0C,iBAAa1C,EACbyO,WAAW,GALI,E,sEA+DT,IAAD,OACP,OACE,6BACE,kBAAC,GAAD,MAEE7P,KAAKkB,MAAM2O,UAET,6BACE,kBAACtN,EAAA,EAAD,CAASD,MAAM,UAAUE,UAAU,oBAGrC,yBAAKA,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsN,KAAK,IAAIC,OAAK,EAACT,UAAW5P,IACjC,kBAAC,IAAD,CAAOoQ,KAAK,eAAeR,UAAW,kBAAM,kBAAC,EAAD,CAAYhO,MAAO6D,EAAGe,mBAClE,kBAAC,IAAD,CAAO4J,KAAK,aAAaR,UAAW1L,IACpC,kBAAC,IAAD,CAAOkM,KAAK,YAAYR,UAAWxI,IACnC,kBAAC,IAAD,CAAOgJ,KAAK,UAAUR,UAAW,kBAAM,kBAAC,EAAD,CAAYhO,MAAO6D,EAAGoB,cAC7D,kBAAC,IAAD,CAAOuJ,KAAK,WAAWN,OAAQ,kBAAM,kBAAC,EAAD,CAAQlH,WAAY,EAAKpH,MAAMoH,gBACpE,kBAAC,IAAD,CAAOwH,KAAK,aAAaN,OAAQ,kBAAM,kBAAC,EAAD,CAAU1L,YAAa,EAAK5C,MAAM4C,iBACzE,kBAAC,IAAD,CAAOgM,KAAK,WAAWR,UAAW9G,IAElC,kBAAC,IAAD,CAAOsH,KAAK,UAAUC,OAAK,EAACT,UAAW1F,KACvC,kBAAC,GAAD,CAAckG,KAAK,cAAcR,UAAWhC,KAE5C,kBAAC,IAAD,CAAUmB,GAAG,a,GAzFXvO,aCVE8P,QACW,cAA7B5G,OAAO5F,SAASyM,UAEe,UAA7B7G,OAAO5F,SAASyM,UAEhB7G,OAAO5F,SAASyM,SAASC,MACvB,2D,MCRNC,IAASX,OACL,kBAAC,KAAD,CAAYY,SAAS,KACjB,kBAAC,GAAD,OAEJzD,SAASC,eAAe,SDmHtB,kBAAmByD,WACrBA,UAAUC,cAAcC,MAAM/O,KAAK,SAAAgP,GACjCA,EAAaC,iB","file":"static/js/main.274c7df0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, } from 'reactstrap';\n\nclass Home extends Component {\n  generateOpener = () => {\n    var date = new Date();\n    var hour = date.getHours(); //gets hour in 24 hour format\n\n    if (hour >= 18) { //6pm to midnight\n      return \"Good Evening, I'm Brian!\";\n    } else if (hour >= 12) { //12pm to 6pm\n      return \"Good Afternoon, I'm Brian!\";\n    } else if (hour >= 0) { //midnight to 12pm\n      return \"Good Morning, I'm Brian!\";\n    } else { //if the date can't be accessed for whatever reason\n      return \"Hello, I'm Brian!\";\n    }\n  }\n\n  render() {\n    const opener = this.generateOpener();\n\n    return (\n      <div>\n        <Jumbotron>\n          <h1>{opener}</h1>\n          <h4>I am currently a fourth year Computer Science and Engineering\n            major at University of California, Los Angeles.\n          </h4>\n          <hr />\n          <p>Besides learning how to code, I enjoy photography and traveling.</p>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default Home;","export const nameNoSpace = (name) => {\n    return name.replace(/\\s/g, '');\n}\n\nexport const sortAlpha = (items) => {\n    return items.sort((a,b) => {\n        return a['data'].name.toLowerCase().localeCompare(b['data'].name.toLowerCase());\n    });\n}\n\n// sorts from highest number to lowest\nexport const sortPriority = (items) => {\n    return items.sort((a,b) => {\n        return Number(b['data'].order)-Number(a['data'].order);\n    });\n}","import React, { Component } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n  Alert,\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  CardHeader,\n} from 'reactstrap';\nimport { sortPriority } from '../scripts/strings';\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      experienceData: undefined,\n      error: undefined,\n    }\n  }\n\n  componentDidMount() {\n    this.props.fbRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        this.setState({\n          experienceData: sorted,\n        });\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        this.setState({\n          error: err,\n        })\n      });\n  }\n\n  render() {\n    if (this.state.experienceData === undefined) {\n      if (this.state.error) {\n        return (\n          <Alert color=\"danger\">\n            Failed to load data. Please try again later.\n          </Alert>\n        )\n      }\n      return (\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n      )\n    }\n\n    let experienceItems = this.state.experienceData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Card>\n            <CardBody className=\"text-center\">\n              {data.name && <CardHeader tag=\"h3\">{data.name}</CardHeader>}\n              {data.title && <CardTitle tag=\"h5\" style={{ paddingTop: '8px' }}>{data.title}</CardTitle>}\n              {data.start_date && data.end_date && <CardSubtitle><em>{data.start_date} - {data.end_date}</em></CardSubtitle>}\n              {data.location && <CardSubtitle><small><em>{data.location}</em></small></CardSubtitle>}\n              {data.description && <CardText>{data.description}</CardText>}\n            </CardBody>\n          </Card>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {experienceItems}\n      </ListGroup>\n    );\n  }\n}\n\nexport default Experience;","import React, { Component } from 'react';\n\nclass Projects extends Component {\n  render() {\n    return (\n        <h1>Projects Screen</h1>\n    )\n  }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Media, Alert } from 'reactstrap';\nimport '../styles/contactsStyles.css';\nimport '../App.css';\n\nclass Contacts extends Component {\n  render() {\n    if (this.props.socialsData === undefined) {\n        return (\n          <Alert color=\"danger\">\n            Failed to load data. Please try again later.\n          </Alert>\n        )\n    }\n\n    let socialItems = this.props.socialsData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Media href={data.link ? data.link : '#'} target=\"_blank\" rel=\"noopener noreferrer\" className=\"media-all\">\n            {\n              item.data.icon &&\n              <Media left>\n                <Media object src={data.icon} alt={data.name ? data.name : 'company icon'} className=\"icon-img\" />\n              </Media>\n            }\n            <h3 className=\"icon-name\">{data.name}</h3>\n          </Media>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {socialItems}\n      </ListGroup>\n    )\n  }\n}\n\nexport default Contacts;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  authDomain: \"personalwebsite2019-d87ab.firebaseapp.com\",\n  databaseURL: \"https://personalwebsite2019-d87ab.firebaseio.com\",\n  projectId: \"personalwebsite2019-d87ab\",\n  storageBucket: \"gs://personalwebsite2019-d87ab.appspot.com/\",\n  messagingSenderId: \"870102134037\",\n  appId: \"1:870102134037:web:0b714c8e3e279024\"\n};\n\nclass Firebase {\n  constructor() {\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    // Load in the firebase functions we need\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n    this.experienceRef = this.db.collection('experiences');\n    this.projectsRef = this.db.collection('projects');\n    this.socialsRef = this.db.collection('socials');\n    this.coursesRef = this.db.collection('courses');\n    this.clubsRef = this.db.collection('clubs');\n    this.awardsRef = this.db.collection('awards');\n    this.storageRef = firebase.storage().ref();\n  }\n\n  handleSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  handleSignOut = () => this.auth.signOut();\n\n  getCurrentUser = () => this.auth.currentUser;\n\n  isUserLoggedIn = () => !!this.auth.currentUser;\n}\n\nconst fb = new Firebase();\n\nexport default fb;","import React, { Component } from 'react';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Spinner,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport fb from '../firebase';\nimport { sortAlpha } from '../scripts/strings';\n\nconst Course = (props) => {\n  const { data } = props;\n  return (<><h3>{data.name}</h3><h5>{data.desc}</h5><hr /></>);\n}\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      currentCoursesData: undefined,\n      completedCoursesData: undefined,\n    };\n  }\n\n  componentDidMount() {\n    fb.coursesRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortAlpha(items);\n        const currentCoursesData = [];\n        const completedCoursesData = [];\n        sorted.forEach(item => {\n          if (item.data['current'] === '0') {\n            completedCoursesData.push(item);\n          } else {\n            currentCoursesData.push(item);\n          }\n        })\n        this.setState({\n          currentCoursesData,\n          completedCoursesData,\n        });\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        this.setState({\n          error: err,\n        })\n      });\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.currentCoursesData && !this.state.completedCoursesData) {\n      return (<div>\n        <Spinner color=\"primary\" className=\"spinner-center\" />\n      </div>)\n    }\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Completed Courses\n                        </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Current Courses\n                    </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            {\n              this.state.completedCoursesData.length !== 0\n                ?\n                this.state.completedCoursesData.map(item => <Course key={item.id} data={item.data} />)\n                :\n                'Something went wrong...'\n            }\n          </TabPane>\n          <TabPane tabId=\"2\">\n            {\n              this.state.currentCoursesData.length !== 0\n                ?\n                this.state.currentCoursesData.map(item => <Course key={item.id} data={item.data} />)\n                :\n                'There are no relevant classes that I am currently taking.'\n            }\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default Courses;","import React, { Component } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Alert,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardHeader,\n} from 'reactstrap';\nimport '../App.css';\n\nclass Awards extends Component {\n  // Given the data.awarded string in format \"F 18, F 19\", return list comp.\n  // separating them\n  separateAwarded = (awarded) => {\n    const arr = awarded.split(',');\n    const trimmed = arr.map(i => i.trim());\n    let items = trimmed.map(item => {\n      return (\n        <ListGroupItem>{item}</ListGroupItem>\n      );\n    });\n    return (\n      <ListGroup flush>{items}</ListGroup>\n    );\n  }\n\n  render() {\n    // If undefined at this point, then there was error previously\n    if (this.props.awardsData === undefined) {\n      return (\n        <Alert color=\"danger\">\n          Failed to load data. Please try again later.\n          </Alert>\n      )\n    }\n\n    let awardsItems = this.props.awardsData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Card>\n            <CardBody className=\"text-center\">\n              {data.name && <CardHeader tag=\"h3\">{data.name}</CardHeader>}\n              {data.description && <CardSubtitle style={{ paddingTop: '8px' }}>{data.description}</CardSubtitle>}\n              <p style={{ paddingTop: '15px' }}>Awarded:</p>\n              {data.awarded && this.separateAwarded(data.awarded)}\n            </CardBody>\n          </Card>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {awardsItems}\n      </ListGroup>\n    )\n  }\n}\n\nexport default Awards;","import React, { Component } from 'react';\nimport Iframe from 'react-iframe'\nimport fb from '../firebase';\n\nclass Resume extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            downloadUrl: undefined,\n            error: undefined,\n        }\n    }\n\n    loadFile = async () => {\n        // Create a reference to the file we want to download\n        const resumeRef = fb.storageRef.child('BrianChanResume.pdf');\n        let errorStatus = false;\n        let dUrl;\n        // Get the download URL\n        await resumeRef.getDownloadURL().then(url => {\n            dUrl = url;\n        }).catch(error => {\n            console.error(error);\n            errorStatus = error.code;\n        });\n\n        this.setState({\n            downloadUrl: dUrl,\n            error: errorStatus,\n        });\n    }\n\n    render() {\n        if (!this.state.downloadUrl && !this.state.error) {\n            this.loadFile();\n        }\n\n        if (this.state.error) {\n            return (<h1>An error has occurred with loading the pdf. Please try again later.</h1>);\n        }\n\n        return (\n            <Iframe url={this.state.downloadUrl}\n                width=\"100%\"\n                height={window.innerHeight}\n                display=\"initial\"\n                padding-top=\"60px\"\n                position=\"relative\" />\n        )\n    }\n}\n\nexport default Resume;","// eslint-disable-next-line\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const emailValidator = (email) => {\n    return emailRegex.test(email);\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from 'reactstrap';\nimport fb from '../firebase';\nimport { emailValidator } from '../scripts/validators';\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      invalidEmail: '',\n      invalidPassword: '',\n    };\n  }\n\n  onSubmit = async (event) => {\n    const { email, password } = this.state;\n\n    // Validators\n    if (emailValidator(email.toLowerCase())) {\n      fb.handleSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log('success');\n        this.props.history.push('/admin-edit');\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        console.log('error', error);\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === 'auth/wrong-password') {\n          this.setState({\n            invalidPassword: errorMessage,\n          })\n        } else if (\n          errorCode === 'auth/invalid-email' ||\n          errorCode === 'auth/user-disabled' ||\n          errorCode === 'auth/user-not-found'\n        ) {\n          this.setState({\n            invalidEmail: errorMessage,\n          })\n        }\n      });\n    } else {\n      this.setState({\n        invalidEmail: 'This does not look like an email address. Please try again.',\n      })\n    } \n    event.preventDefault();   \n  }\n\n  handleChange = (event) => {\n    this.setState({\n      invalidEmail: '',\n      invalidPassword: '',\n      [event.target.id]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Form>\n        <FormGroup>\n          <Label for=\"email\">Admin Email</Label>\n          {\n            this.state.invalidEmail !== '' ?\n            <Input invalid type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} /> :\n            <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n          } \n          {this.state.invalidEmail !== '' && <FormFeedback>{this.state.invalidEmail}</FormFeedback>}   \n        </FormGroup>\n        <FormGroup>\n          <Label for=\"password\">Admin Password</Label>\n          {\n            this.state.invalidPassword !== '' ?\n            <Input invalid type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} /> :\n            <Input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n          } \n          {this.state.invalidPassword !== '' && <FormFeedback>{this.state.invalidPassword}</FormFeedback>}  \n        </FormGroup>\n        <Button onClick={this.onSubmit}>Submit</Button>\n      </Form>\n    )\n  }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass ExperienceForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = this.props.fbRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await this.props.fbRef.doc(id).delete()\n    .then(() => {\n      console.log(\"Successfully deleted \", id);\n    })\n    .catch((err) => {\n      console.error(\"Error deleting document: \", err);\n    })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await this.props.fbRef.add(firebaseUpdateObject)\n    .then((docRef) => {\n      console.log(\"Document written with id \", docRef.id);\n    })\n    .catch((err) => {\n      console.error(\"Error adding new document: \", err);\n    })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"location\">Location</Label>\n              <Input type=\"text\" name=\"location\" id={\"location\" + newName} placeholder={item ? item.data['location'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"start_date\">Start Date</Label>\n              <Input type=\"text\" name=\"start_date\" id={\"start_date\" + newName} placeholder={item ? item.data['start_date'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"end_date\">End Date</Label>\n              <Input type=\"text\" name=\"end_date\" id={\"end_date\" + newName} placeholder={item ? item.data['end_date'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input type=\"text\" name=\"title\" id={\"title\" + newName} placeholder={item ? item.data['title'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"order\">Order</Label>\n              <Input type=\"number\" name=\"order\" id={\"order\" + newName} placeholder={item ? item.data['order'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input type=\"textarea\" name=\"description\" id={\"description\" + newName} placeholder={item ? item.data['description'] : \"\"} onChange={this.handleChange} />\n        </FormGroup>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default ExperienceForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass SocialsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.socialsRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.socialsRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.socialsRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"icon\">Icon</Label>\n              <Input type=\"text\" name=\"icon\" id={\"icon\" + newName} placeholder={item ? item.data['icon'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={12}>\n            <FormGroup>\n              <Label for=\"link\">Link</Label>\n              <Input type=\"text\" name=\"link\" id={\"link\" + newName} placeholder={item ? item.data['link'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default SocialsForm;","import React, { Component } from 'react';\nimport { Button, Alert } from 'reactstrap';\nimport fb from '../firebase';\n\nclass ResumeForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noFile: true,\n            success: false,\n        };\n    }\n\n    checkFile = () => {\n        // check to see if there even is a file selected\n        if (document.getElementById('file').files.length === 0) {\n            this.setState({ noFile: true, });\n        }\n\n        this.setState({ noFile: false, success: false, });\n    }\n\n    handleSubmit = async () => {\n        if (this.state.noFile) {\n            return;\n        }\n        // select the one and only selected file\n        const file = document.getElementById('file').files[0];\n        const resumeRef = fb.storageRef.child('BrianChanResume.pdf');\n        await resumeRef.put(file).then(function (snapshot) {\n            console.log('Uploaded file successfully');\n        });\n        this.setState({\n            success: true,\n        });\n    }\n\n    render() {\n        // Use the name without spaces for unique key for form id's\n        return (\n            <div className='upload-resume'>\n                {this.state.success && <Alert color=\"success\">File upload successful.</Alert>}\n                {this.state.noFile && <Alert color=\"danger\">No file currently selected for upload.</Alert>}\n                <input type='file'\n                    id='file'\n                    className='input-file'\n                    accept='.pdf'\n                    onChange={this.checkFile}\n                />\n                <Button onClick={this.handleSubmit}>Update</Button>\n            </div>\n        );\n    }\n}\n\nexport default ResumeForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass CoursesForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.coursesRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.coursesRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.coursesRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Course Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"desc\">Course Description</Label>\n              <Input type=\"text\" name=\"desc\" id={\"desc\" + newName} placeholder={item ? item.data['desc'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"current\">Current</Label>\n              <Input type=\"number\" name=\"current\" id={\"current\" + newName} placeholder={item ? item.data['current'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default CoursesForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass AwardsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.awardsRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.awardsRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.awardsRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Award Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"desc\">Award Description</Label>\n              <Input type=\"text\" name=\"description\" id={\"description\" + newName} placeholder={item ? item.data['description'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"current\">Order</Label>\n              <Input type=\"number\" name=\"order\" id={\"order\" + newName} placeholder={item ? item.data['order'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"current\">Awarded when</Label>\n              <Input type=\"text\" name=\"awarded\" id={\"awarded\" + newName} placeholder={item ? item.data['awarded'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default AwardsForm;","import React, { Component } from 'react';\nimport {\n  Form,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  Spinner\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport ExperienceForm from '../components/ExperienceForm';\nimport SocialsForm from '../components/SocialsForm';\nimport ResumeForm from '../components/ResumeForm';\nimport CoursesForm from '../components/CoursesForm';\nimport AwardsForm from '../components/AwardsForm';\nimport fb from '../firebase';\nimport '../App.css'\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      experienceData: undefined,\n      socialsData: undefined,\n      coursesData: undefined,\n      clubsData: undefined,\n      awardsData: undefined,\n    };\n  }\n\n  componentDidMount() {\n    fb.experienceRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          experienceData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.socialsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          socialsData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.coursesRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          coursesData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.clubsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          clubsData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.awardsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          awardsData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  onSubmit = (event) => {\n    fb.handleSignOut().then(() => {\n      console.log('Successfully logged out');\n      this.props.history.push('/');\n    }).catch((error) => {\n      console.error('Sign out error: ', error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    let experienceDBForm =\n      this.state.experienceData\n        ?\n        this.state.experienceData.map((item) =>\n          <ExperienceForm key={item.id} item={item} fbRef={fb.experienceRef} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let socialsDBForm =\n      this.state.socialsData\n        ?\n        this.state.socialsData.map((item) =>\n          <SocialsForm key={item.id} item={item} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let coursesDBForm =\n      this.state.coursesData\n        ?\n        this.state.coursesData.map((item) =>\n          <CoursesForm key={item.id} item={item} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let clubsDBForm =\n      this.state.clubsData\n        ?\n        this.state.clubsData.map((item) =>\n          <ExperienceForm key={item.id} item={item} fbRef={fb.clubsRef} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let awardsDBForm = this.state.awardsData\n      ?\n      this.state.awardsData.map((item) =>\n        <AwardsForm key={item.id} item={item} />\n      )\n      :\n      <div>\n        <Spinner color=\"primary\" className=\"spinner-center\" />\n      </div>\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Home\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Experience\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3' })}\n              onClick={() => { this.toggle('3'); }}\n            >\n              Projects\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '4' })}\n              onClick={() => { this.toggle('4'); }}\n            >\n              Coursework\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '5' })}\n              onClick={() => { this.toggle('5'); }}\n            >\n              Extracurriculars\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '6' })}\n              onClick={() => { this.toggle('6'); }}\n            >\n              Skills\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '7' })}\n              onClick={() => { this.toggle('7'); }}\n            >\n              Resume\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '8' })}\n              onClick={() => { this.toggle('8'); }}\n            >\n              Socials\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '9' })}\n              onClick={() => { this.toggle('9'); }}\n            >\n              Awards\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '10' })}\n              onClick={() => { this.toggle('10'); }}\n            >\n              Sign Out\n          </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <h1>Home Edit</h1>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {experienceDBForm}\n              {/* New form if you want to add something new */}\n              <ExperienceForm addition={true} fbRef={fb.experienceRef} />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <h1>Projects edit</h1>\n          </TabPane>\n          <TabPane tabId=\"4\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {coursesDBForm}\n              {/* New form if you want to add something new */}\n              <CoursesForm addition={true} />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"5\">\n            {clubsDBForm}\n            <ExperienceForm addition={true} fbRef={fb.clubsRef} />\n          </TabPane>\n          <TabPane tabId=\"6\">\n            <h1>Skills edit</h1>\n          </TabPane>\n          <TabPane tabId=\"7\">\n            <div>\n              <ResumeForm />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"8\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {socialsDBForm}\n              {/* New form if you want to add something new */}\n              <SocialsForm addition={true} />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"9\">\n            {awardsDBForm}\n            <AwardsForm addition={true} />\n          </TabPane>\n          <TabPane tabId=\"10\">\n            <Form>\n              <Button onClick={this.onSubmit}>Sign Out</Button>\n            </Form>\n          </TabPane>\n        </TabContent>\n      </div>\n    )\n  }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarBrand,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport fb from '../firebase';\n\nclass NavHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      // user: undefined,\n    });\n  }\n\n  // Handles the large view navbar\n  // If navbar is large, isOpen is false, so we do not want to toggle\n  // However, if it's in mobile then isOpen is true and we do want to toggle\n  toggleCond = () => {\n    if (this.state.isOpen) {\n      this.setState({\n        isOpen: false,\n      });\n    }\n  }\n\n  componentDidMount() {\n    fb.auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log('user is logged in');\n        this.setState({\n          user: user,\n        });\n      } else {\n        console.log('user is not logged in');\n        this.setState({\n          user: undefined,\n        })\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"light\" light fixed=\"top\" expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">Brian Chan</NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              {/* <NavLink to=\"/experience/\">Experience</NavLink> */}\n              <NavLink tag={Link} to=\"/experience/\" onClick={this.toggleCond}>Experience</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/projects/\" onClick={this.toggleCond}>Projects</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Education\n                </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/courses/\" onClick={this.toggleCond}>Relevant Coursework</NavLink>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/clubs/\" onClick={this.toggleCond}>Extracurriculars</NavLink>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/awards/\" onClick={this.toggleCond}>Awards</NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <NavItem>\n              <NavLink tag={Link} to=\"/skills/\" onClick={this.toggleCond}>Skills</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/resume/\" onClick={this.toggleCond}>Resume</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/contacts/\" onClick={this.toggleCond}>Contact Me</NavLink>\n            </NavItem>\n            {\n              fb.isUserLoggedIn() &&\n              <NavItem>\n                <NavLink tag={Link} to=\"/admin-edit/\" onClick={this.toggleCond}>Edit</NavLink>\n              </NavItem>\n            }\n          </Nav>\n        </Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default NavHeader;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Edit from '../screens/edit'\nimport fb from '../firebase';\n\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return (\n          fb.isUserLoggedIn() ?\n            <Edit {...props} /> :\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }} />\n        );\n      }}\n    />\n  );\n};\n","import React, { Component } from 'react';\nimport {\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport { Spinner } from 'reactstrap';\nimport Home from './screens/home';\nimport Experience from './screens/experience';\nimport Projects from './screens/projects';\nimport Contacts from './screens/contacts';\nimport Courses from './screens/courses';\nimport Awards from './screens/awards';\nimport Resume from './screens/resume';\nimport Admin from './screens/admin';\nimport Edit from './screens/edit';\nimport NavHeader from './components/navheader';\nimport { PrivateRoute } from './components/privateroute';\nimport fb from './firebase';\nimport { sortPriority, sortAlpha } from './scripts/strings';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      awardsData: undefined,\n      socialsData: undefined,\n      isLoading: true,\n    }\n  }\n\n  componentDidMount = async () => {\n    fb.auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log('user is logged in');\n      } else {\n        console.log('user is not logged in');\n      }\n    });\n\n    let awardsData = [];\n    let socialsData = [];\n    await fb.awardsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        awardsData = sorted;\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        awardsData = undefined;\n      });\n\n    await fb.socialsRef.get()\n    .then(snapshot => {\n      let items = [];\n      snapshot.forEach(doc => {\n        let item = {\n          id: doc.id,\n          data: doc.data(),\n        }\n        items.push(item);\n      });\n      let sorted = sortAlpha(items);\n      socialsData = sorted;\n    }).catch(err => {\n      // save error to a state\n      console.error('Error getting documents', err);\n      socialsData = undefined;\n    });\n\n    this.setState({\n      awardsData,\n      socialsData,\n      isLoading: false,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <NavHeader />\n        {\n          this.state.isLoading\n            ?\n            <div>\n              <Spinner color=\"primary\" className=\"spinner-center\" />\n            </div>\n            :\n            <div className=\"site_container\">\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/experience/\" component={() => <Experience fbRef={fb.experienceRef} />} />\n                <Route path=\"/projects/\" component={Projects} />\n                <Route path=\"/courses/\" component={Courses} />\n                <Route path=\"/clubs/\" component={() => <Experience fbRef={fb.clubsRef} />} />\n                <Route path=\"/awards/\" render={() => <Awards awardsData={this.state.awardsData} />} />\n                <Route path=\"/contacts/\" render={() => <Contacts socialsData={this.state.socialsData}/>} />\n                <Route path=\"/resume/\" component={Resume} />\n                {/* Admin portal */}\n                <Route path=\"/admin/\" exact component={Admin} />\n                <PrivateRoute path='/admin-edit' component={Edit} />\n                {/* 404 redirect to Home */}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}