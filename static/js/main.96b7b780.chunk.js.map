{"version":3,"sources":["screens/home.js","scripts/strings.js","firebase.js","screens/experience.js","screens/projects.js","screens/contacts.js","screens/courses.js","screens/resume.js","scripts/validators.js","screens/admin.js","components/ExperienceForm.js","components/SocialsForm.js","components/ResumeForm.js","components/CoursesForm.js","screens/edit.js","components/navheader.js","components/privateroute.js","App.js","serviceWorker.js","index.js"],"names":["Home","generateOpener","hour","Date","getHours","opener","this","Jumbotron","Component","nameNoSpace","name","replace","sortAlpha","items","sort","a","b","toLowerCase","localeCompare","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fb","handleSignInWithEmailAndPassword","email","password","auth","signInWithEmailAndPassword","handleSignOut","signOut","getCurrentUser","currentUser","isUserLoggedIn","firebase","initializeApp","db","firestore","experienceRef","collection","projectsRef","socialsRef","coursesRef","clubsRef","storageRef","storage","ref","Experience","props","state","experienceData","undefined","error","fbRef","get","then","snapshot","forEach","doc","item","id","data","push","sorted","Number","order","sortPriority","setState","catch","err","console","Alert","color","Spinner","className","experienceItems","map","ListGroupItem","key","Card","CardBody","CardHeader","tag","title","CardTitle","style","paddingTop","start_date","end_date","CardSubtitle","location","description","CardText","ListGroup","Projects","Contacts","socialsData","socialItems","Media","href","link","target","rel","icon","left","object","src","alt","Course","desc","Courses","toggle","tab","activeTab","currentCoursesData","completedCoursesData","Nav","tabs","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","length","Resume","loadFile","resumeRef","child","errorStatus","getDownloadURL","url","dUrl","code","downloadUrl","width","height","window","innerHeight","display","padding-top","position","emailRegex","emailValidator","test","Admin","onSubmit","event","log","history","errorCode","errorMessage","message","invalidPassword","invalidEmail","preventDefault","handleChange","value","Form","FormGroup","Label","for","Input","invalid","type","onChange","FormFeedback","Button","ExperienceForm","handleUpdate","newName","addition","firebaseUpdateObject","Object","entries","fbKey","itemRef","update","handleDelete","delete","handleNewSubmission","add","docRef","Row","form","Col","md","placeholder","sm","SocialsForm","ResumeForm","checkFile","document","getElementById","files","noFile","success","handleSubmit","file","put","accept","CoursesForm","Edit","coursesData","experienceDBForm","socialsDBForm","coursesDBForm","NavHeader","isOpen","toggleCond","onAuthStateChanged","user","Navbar","light","fixed","expand","NavbarBrand","Link","to","NavbarToggler","Collapse","navbar","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","PrivateRoute","component","rest","render","pathname","from","App","path","exact","Boolean","hostname","match","ReactDOM","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96b7b780.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron, } from 'reactstrap';\n\nclass Home extends Component {\n  generateOpener = () => {\n    var date = new Date();\n    var hour = date.getHours(); //gets hour in 24 hour format\n\n    if (hour >= 18) { //6pm to midnight\n      return \"Good Evening, I'm Brian!\";\n    } else if (hour >= 12) { //12pm to 6pm\n      return \"Good Afternoon, I'm Brian!\";\n    } else if (hour >= 0) { //midnight to 12pm\n      return \"Good Morning, I'm Brian!\";\n    } else { //if the date can't be accessed for whatever reason\n      return \"Hello, I'm Brian!\";\n    }\n  }\n\n  render() {\n    const opener = this.generateOpener();\n\n    return (\n      <div>\n        <Jumbotron>\n          <h1>{opener}</h1>\n          <h4>I am currently a fourth year Computer Science and Engineering\n            major at University of California, Los Angeles.\n          </h4>\n          <hr />\n          <p>Besides learning how to code, I enjoy photography and traveling.</p>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default Home;","export const nameNoSpace = (name) => {\n    return name.replace(/\\s/g, '');\n}\n\nexport const sortAlpha = (items) => {\n    return items.sort((a,b) => {\n        return a['data'].name.toLowerCase().localeCompare(b['data'].name.toLowerCase());\n    });\n}\n\n// sorts from highest number to lowest\nexport const sortPriority = (items) => {\n    return items.sort((a,b) => {\n        return Number(b['data'].order)-Number(a['data'].order);\n    });\n}","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  authDomain: \"personalwebsite2019-d87ab.firebaseapp.com\",\n  databaseURL: \"https://personalwebsite2019-d87ab.firebaseio.com\",\n  projectId: \"personalwebsite2019-d87ab\",\n  storageBucket: \"gs://personalwebsite2019-d87ab.appspot.com/\",\n  messagingSenderId: \"870102134037\",\n  appId: \"1:870102134037:web:0b714c8e3e279024\"\n};\n\nclass Firebase {\n  constructor() {\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    // Load in the firebase functions we need\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n    this.experienceRef = this.db.collection('experiences');\n    this.projectsRef = this.db.collection('projects');\n    this.socialsRef = this.db.collection('socials');\n    this.coursesRef = this.db.collection('courses');\n    this.clubsRef = this.db.collection('clubs');\n    this.storageRef = firebase.storage().ref();\n  }\n\n  handleSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  handleSignOut = () => this.auth.signOut();\n\n  getCurrentUser = () => this.auth.currentUser;\n\n  isUserLoggedIn = () => !!this.auth.currentUser;\n}\n\nconst fb = new Firebase();\n\nexport default fb;","import React, { Component } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n  Alert,\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  CardHeader,\n} from 'reactstrap';\nimport { sortPriority } from '../scripts/strings';\nimport fb from '../firebase';\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      experienceData: undefined,\n      error: undefined,\n    }\n  }\n\n  componentDidMount() {\n    this.props.fbRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortPriority(items);\n        this.setState({\n          experienceData: sorted,\n        });\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        this.setState({\n          error: err,\n        })\n      });\n  }\n\n  render() {\n    if (this.state.experienceData === undefined) {\n      if (this.state.error) {\n        return (\n          <Alert color=\"danger\">\n            Failed to load data. Please try again later.\n          </Alert>\n        )\n      }\n\n      return (\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n      )\n    }\n\n    let experienceItems = this.state.experienceData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Card>\n            <CardBody className=\"text-center\">\n              {data.name && <CardHeader tag=\"h3\">{data.name}</CardHeader>}\n              {data.title && <CardTitle tag=\"h5\" style={{ paddingTop: '8px' }}>{data.title}</CardTitle>}\n              {data.start_date && data.end_date && <CardSubtitle><em>{data.start_date} - {data.end_date}</em></CardSubtitle>}\n              {data.location && <CardSubtitle><small><em>{data.location}</em></small></CardSubtitle>}\n              {data.description && <CardText>{data.description}</CardText>}\n            </CardBody>\n          </Card>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {experienceItems}\n      </ListGroup>\n    );\n  }\n}\n\nexport default Experience;","import React, { Component } from 'react';\n\nclass Projects extends Component {\n  render() {\n    return (\n        <h1>Projects Screen</h1>\n    )\n  }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Media, Spinner, Alert } from 'reactstrap';\nimport fb from '../firebase';\nimport { sortAlpha } from '../scripts/strings';\nimport '../styles/contactsStyles.css';\nimport '../App.css';\n\nclass Contacts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      socialsData: undefined,\n      error: undefined,\n    }\n  }\n\n  componentDidMount() {\n    fb.socialsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortAlpha(items);\n        this.setState({\n          socialsData: sorted,\n        });\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        this.setState({\n          error: err,\n        })\n      });\n  }\n\n  render() {\n    if (this.state.socialsData === undefined) {\n      if (this.state.error) {\n        return (\n          <Alert color=\"danger\">\n            Failed to load data. Please try again later.\n          </Alert>\n        )\n      }\n\n      return (\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\"/>\n        </div>\n      )\n    }\n\n    let socialItems = this.state.socialsData.map((item) => {\n      const { data } = item;\n      return (\n        <ListGroupItem key={item.id}>\n          <Media href={data.link ? data.link : '#'} target=\"_blank\" rel=\"noopener noreferrer\" className=\"media-all\">\n            {\n              item.data.icon &&\n              <Media left>\n                <Media object src={data.icon} alt={data.name ? data.name : 'company icon'} className=\"icon-img\" />\n              </Media>\n            }\n            <h3 className=\"icon-name\">{data.name}</h3>\n          </Media>\n        </ListGroupItem>\n      );\n    });\n\n    return (\n      <ListGroup>\n        {socialItems}\n      </ListGroup>\n    )\n  }\n}\n\nexport default Contacts;","import React, { Component } from 'react';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport fb from '../firebase';\nimport { sortAlpha } from '../scripts/strings';\n\nconst Course = (props) => {\n  const { data } = props;\n  return (<><h3>{data.name}</h3><h5>{data.desc}</h5><hr /></>);\n}\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      currentCoursesData: undefined,\n      completedCoursesData: undefined,\n    };\n  }\n\n  componentDidMount() {\n    fb.coursesRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        let sorted = sortAlpha(items);\n        const currentCoursesData = [];\n        const completedCoursesData = [];\n        sorted.forEach(item => {\n          if (item.data['current'] === '0') {\n            completedCoursesData.push(item);\n          } else {\n            currentCoursesData.push(item);\n          }\n        })\n        this.setState({\n          currentCoursesData,\n          completedCoursesData,\n        });\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n        this.setState({\n          error: err,\n        })\n      });\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.currentCoursesData && !this.state.completedCoursesData) {\n      return <h1>Loading...</h1>\n    }\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Completed Courses\n                        </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Current Courses\n                    </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            {\n              this.state.completedCoursesData.length !== 0\n                ?\n                this.state.completedCoursesData.map(item => <Course key={item.id} data={item.data} />)\n                :\n                'Something went wrong...'\n            }\n          </TabPane>\n          <TabPane tabId=\"2\">\n            {\n              this.state.currentCoursesData.length !== 0\n                ?\n                this.state.currentCoursesData.map(item => <Course key={item.id} data={item.data} />)\n                :\n                'There are no relevant classes that I am currently taking.'\n            }\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default Courses;","import React, { Component } from 'react';\nimport Iframe from 'react-iframe'\nimport fb from '../firebase';\n\nclass Resume extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            downloadUrl: undefined,\n            error: undefined,\n        }\n    }\n\n    loadFile = async () => {\n        // Create a reference to the file we want to download\n        const resumeRef = fb.storageRef.child('BrianChanResume.pdf');\n        let errorStatus = false;\n        let dUrl;\n        // Get the download URL\n        await resumeRef.getDownloadURL().then(url => {\n            dUrl = url;\n        }).catch(error => {\n            console.error(error);\n            errorStatus = error.code;\n        });\n\n        this.setState({\n            downloadUrl: dUrl,\n            error: errorStatus,\n        });\n    }\n\n    render() {\n        if (!this.state.downloadUrl && !this.state.error) {\n            this.loadFile();\n        }\n\n        if (this.state.error) {\n            return (<h1>An error has occurred with loading the pdf. Please try again later.</h1>);\n        }\n\n        return (\n            <Iframe url={this.state.downloadUrl}\n                width=\"100%\"\n                height={window.innerHeight}\n                display=\"initial\"\n                padding-top=\"60px\"\n                position=\"relative\" />\n        )\n    }\n}\n\nexport default Resume;","// eslint-disable-next-line\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const emailValidator = (email) => {\n    return emailRegex.test(email);\n}","import React, { Component } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from 'reactstrap';\nimport fb from '../firebase';\nimport { emailValidator } from '../scripts/validators';\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      invalidEmail: '',\n      invalidPassword: '',\n    };\n  }\n\n  onSubmit = async (event) => {\n    const { email, password } = this.state;\n\n    // Validators\n    if (emailValidator(email.toLowerCase())) {\n      fb.handleSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log('success');\n        this.props.history.push('/admin-edit');\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        console.log('error', error);\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === 'auth/wrong-password') {\n          this.setState({\n            invalidPassword: errorMessage,\n          })\n        } else if (\n          errorCode === 'auth/invalid-email' ||\n          errorCode === 'auth/user-disabled' ||\n          errorCode === 'auth/user-not-found'\n        ) {\n          this.setState({\n            invalidEmail: errorMessage,\n          })\n        }\n      });\n    } else {\n      this.setState({\n        invalidEmail: 'This does not look like an email address. Please try again.',\n      })\n    } \n    event.preventDefault();   \n  }\n\n  handleChange = (event) => {\n    this.setState({\n      invalidEmail: '',\n      invalidPassword: '',\n      [event.target.id]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Form>\n        <FormGroup>\n          <Label for=\"email\">Admin Email</Label>\n          {\n            this.state.invalidEmail !== '' ?\n            <Input invalid type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} /> :\n            <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n          } \n          {this.state.invalidEmail !== '' && <FormFeedback>{this.state.invalidEmail}</FormFeedback>}   \n        </FormGroup>\n        <FormGroup>\n          <Label for=\"password\">Admin Password</Label>\n          {\n            this.state.invalidPassword !== '' ?\n            <Input invalid type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} /> :\n            <Input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n          } \n          {this.state.invalidPassword !== '' && <FormFeedback>{this.state.invalidPassword}</FormFeedback>}  \n        </FormGroup>\n        <Button onClick={this.onSubmit}>Submit</Button>\n      </Form>\n    )\n  }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass ExperienceForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.experienceRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.experienceRef.doc(id).delete()\n    .then(() => {\n      console.log(\"Successfully deleted \", id);\n    })\n    .catch((err) => {\n      console.error(\"Error deleting document: \", err);\n    })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.experienceRef.add(firebaseUpdateObject)\n    .then((docRef) => {\n      console.log(\"Document written with id \", docRef.id);\n    })\n    .catch((err) => {\n      console.error(\"Error adding new document: \", err);\n    })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"location\">Location</Label>\n              <Input type=\"text\" name=\"location\" id={\"location\" + newName} placeholder={item ? item.data['location'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"start_date\">Start Date</Label>\n              <Input type=\"text\" name=\"start_date\" id={\"start_date\" + newName} placeholder={item ? item.data['start_date'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"end_date\">End Date</Label>\n              <Input type=\"text\" name=\"end_date\" id={\"end_date\" + newName} placeholder={item ? item.data['end_date'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input type=\"text\" name=\"title\" id={\"title\" + newName} placeholder={item ? item.data['title'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"order\">Order</Label>\n              <Input type=\"number\" name=\"order\" id={\"order\" + newName} placeholder={item ? item.data['order'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input type=\"textarea\" name=\"description\" id={\"description\" + newName} placeholder={item ? item.data['description'] : \"\"} onChange={this.handleChange} />\n        </FormGroup>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default ExperienceForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass SocialsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.socialsRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.socialsRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.socialsRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"icon\">Icon</Label>\n              <Input type=\"text\" name=\"icon\" id={\"icon\" + newName} placeholder={item ? item.data['icon'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={12}>\n            <FormGroup>\n              <Label for=\"link\">Link</Label>\n              <Input type=\"text\" name=\"link\" id={\"link\" + newName} placeholder={item ? item.data['link'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default SocialsForm;","import React, { Component } from 'react';\nimport { Button, Alert } from 'reactstrap';\nimport fb from '../firebase';\n\nclass ResumeForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            noFile: true,\n            success: false,\n        };\n    }\n\n    checkFile = () => {\n        // check to see if there even is a file selected\n        if (document.getElementById('file').files.length === 0) {\n            this.setState({ noFile: true, });\n        }\n\n        this.setState({ noFile: false, success: false, });\n    }\n\n    handleSubmit = async () => {\n        if (this.state.noFile) {\n            return;\n        }\n        // select the one and only selected file\n        const file = document.getElementById('file').files[0];\n        const resumeRef = fb.storageRef.child('BrianChanResume.pdf');\n        await resumeRef.put(file).then(function (snapshot) {\n            console.log('Uploaded file successfully');\n        });\n        this.setState({\n            success: true,\n        });\n    }\n\n    render() {\n        // Use the name without spaces for unique key for form id's\n        return (\n            <div className='upload-resume'>\n                {this.state.success && <Alert color=\"success\">File upload successful.</Alert>}\n                {this.state.noFile && <Alert color=\"danger\">No file currently selected for upload.</Alert>}\n                <input type='file'\n                    id='file'\n                    className='input-file'\n                    accept='.pdf'\n                    onChange={this.checkFile}\n                />\n                <Button onClick={this.handleSubmit}>Update</Button>\n            </div>\n        );\n    }\n}\n\nexport default ResumeForm;","import React, { Component } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, } from 'reactstrap';\nimport fb from '../firebase';\nimport { nameNoSpace } from '../scripts/strings';\n\nclass CoursesForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // Handles the states for when you want to update a field\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  // Handles what happens when you actually press the update button\n  handleUpdate = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    let itemRef = fb.coursesRef.doc(this.props.item.id);\n    try {\n      await itemRef.update(firebaseUpdateObject);\n      console.log(\"Successfully updated\");\n    }\n    catch (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    }\n  }\n\n  // Handles what happens when you delete an item\n  handleDelete = async () => {\n    // Get the id of the item we want to delete\n    const { id } = this.props.item;\n\n    await fb.coursesRef.doc(id).delete()\n      .then(() => {\n        console.log(\"Successfully deleted \", id);\n      })\n      .catch((err) => {\n        console.error(\"Error deleting document: \", err);\n      })\n  }\n\n  // Handles what happens when you want to add a new item\n  handleNewSubmission = async () => {\n    let newName = \"\";\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(this.props.item.data['name']);\n    }\n\n    let firebaseUpdateObject = {};\n    // Iterate over all updated fields in this.state\n    // eslint-disable-next-line\n    for (let [key, value] of Object.entries(this.state)) {\n      // Remove the temporary id of nameNoSpace so it matches the firebase key\n      let fbKey = key.replace(newName, '');\n      firebaseUpdateObject[fbKey] = value;\n    }\n    await fb.coursesRef.add(firebaseUpdateObject)\n      .then((docRef) => {\n        console.log(\"Document written with id \", docRef.id);\n      })\n      .catch((err) => {\n        console.error(\"Error adding new document: \", err);\n      })\n  }\n\n  render() {\n    let newName = \"\";\n    const { item } = this.props;\n\n    // If in adding mode, make newName just 'addition' temporarily\n    if (this.props.addition) {\n      newName = \"addition\"\n    } else {\n      newName = nameNoSpace(item.data['name']);\n    }\n\n    // Use the name without spaces for unique key for form id's\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Course Name</Label>\n              <Input type=\"text\" name=\"name\" id={\"name\" + newName} placeholder={item ? item.data['name'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"desc\">Course Description</Label>\n              <Input type=\"text\" name=\"desc\" id={\"desc\" + newName} placeholder={item ? item.data['desc'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"current\">Current</Label>\n              <Input type=\"number\" name=\"current\" id={\"current\" + newName} placeholder={item ? item.data['current'] : \"\"} onChange={this.handleChange} />\n            </FormGroup>\n          </Col>\n        </Row>\n        {\n          this.props.addition\n            ?\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleNewSubmission}>Add</Button>\n              </Col>\n            </Row>\n            :\n            <Row>\n              <Col sm={6}>\n                <Button onClick={this.handleUpdate}>Update</Button>\n              </Col>\n              <Col sm={6}>\n                <Button onClick={this.handleDelete}>Delete</Button>\n              </Col>\n            </Row>\n        }\n      </Form>\n    );\n  }\n}\n\nexport default CoursesForm;","import React, { Component } from 'react';\nimport {\n  Form,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  Spinner\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport ExperienceForm from '../components/ExperienceForm';\nimport SocialsForm from '../components/SocialsForm';\nimport ResumeForm from '../components/ResumeForm';\nimport CoursesForm from '../components/CoursesForm';\nimport fb from '../firebase';\nimport '../App.css'\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      experienceData: undefined,\n      socialsData: undefined,\n      coursesData: undefined,\n    };\n  }\n\n  componentDidMount() {\n    fb.experienceRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          experienceData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.socialsRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          socialsData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n\n    fb.coursesRef.get()\n      .then(snapshot => {\n        let items = [];\n        snapshot.forEach(doc => {\n          let item = {\n            id: doc.id,\n            data: doc.data(),\n          }\n          items.push(item);\n        });\n        this.setState({\n          coursesData: items,\n        })\n      }).catch(err => {\n        // save error to a state\n        console.error('Error getting documents', err);\n      });\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  onSubmit = (event) => {\n    fb.handleSignOut().then(() => {\n      console.log('Successfully logged out');\n      this.props.history.push('/');\n    }).catch((error) => {\n      console.error('Sign out error: ', error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    let experienceDBForm =\n      this.state.experienceData\n        ?\n        this.state.experienceData.map((item) =>\n          <ExperienceForm key={item.id} item={item} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let socialsDBForm =\n      this.state.socialsData\n        ?\n        this.state.socialsData.map((item) =>\n          <SocialsForm key={item.id} item={item} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    let coursesDBForm =\n      this.state.coursesData\n        ?\n        this.state.coursesData.map((item) =>\n          <CoursesForm key={item.id} item={item} />\n        )\n        :\n        <div>\n          <Spinner color=\"primary\" className=\"spinner-center\" />\n        </div>\n\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Home\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Experience\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3' })}\n              onClick={() => { this.toggle('3'); }}\n            >\n              Projects\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '4' })}\n              onClick={() => { this.toggle('4'); }}\n            >\n              Coursework\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '5' })}\n              onClick={() => { this.toggle('5'); }}\n            >\n              Extracurriculars\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '6' })}\n              onClick={() => { this.toggle('6'); }}\n            >\n              Skills\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '7' })}\n              onClick={() => { this.toggle('7'); }}\n            >\n              Resume\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '8' })}\n              onClick={() => { this.toggle('8'); }}\n            >\n              Socials\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '9' })}\n              onClick={() => { this.toggle('9'); }}\n            >\n              Awards\n          </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '10' })}\n              onClick={() => { this.toggle('10'); }}\n            >\n              Sign Out\n          </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <h1>Home Edit</h1>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {experienceDBForm}\n              {/* New form if you want to add something new */}\n              <ExperienceForm addition={true} />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <h1>Projects edit</h1>\n          </TabPane>\n          <TabPane tabId=\"4\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {coursesDBForm}\n              {/* New form if you want to add something new */}\n              <CoursesForm addition={true} />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"5\">\n            <h1>Extracurriculars edit</h1>\n          </TabPane>\n          <TabPane tabId=\"6\">\n            <h1>Skills edit</h1>\n          </TabPane>\n          <TabPane tabId=\"7\">\n            <div>\n              <ResumeForm />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"8\">\n            <div>\n              {/* The stuff from the DB that you can either update or delete */}\n              {socialsDBForm}\n              {/* New form if you want to add something new */}\n              <SocialsForm addition={true} />\n            </div>\n          </TabPane>\n          <TabPane tabId=\"9\">\n          <h1>Awards edit</h1>\n          </TabPane>\n          <TabPane tabId=\"10\">\n            <Form>\n              <Button onClick={this.onSubmit}>Sign Out</Button>\n            </Form>\n          </TabPane>\n        </TabContent>\n      </div>\n    )\n  }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarBrand,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport fb from '../firebase';\n\nclass NavHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      // user: undefined,\n    });\n  }\n\n  // Handles the large view navbar\n  // If navbar is large, isOpen is false, so we do not want to toggle\n  // However, if it's in mobile then isOpen is true and we do want to toggle\n  toggleCond = () => {\n    if (this.state.isOpen) {\n      this.setState({\n        isOpen: false,\n      });\n    }\n  }\n\n  componentDidMount() {\n    fb.auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log('user is logged in');\n        this.setState({\n          user: user,\n        });\n      } else {\n        console.log('user is not logged in');\n        this.setState({\n          user: undefined,\n        })\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"light\" light fixed=\"top\" expand=\"md\">\n        <NavbarBrand tag={Link} to=\"/\">Brian Chan</NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              {/* <NavLink to=\"/experience/\">Experience</NavLink> */}\n              <NavLink tag={Link} to=\"/experience/\" onClick={this.toggleCond}>Experience</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/projects/\" onClick={this.toggleCond}>Projects</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Education\n                </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/courses/\" onClick={this.toggleCond}>Relevant Coursework</NavLink>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/clubs/\" onClick={this.toggleCond}>Extracurriculars</NavLink>\n                </DropdownItem>\n                <DropdownItem>\n                  <NavLink tag={Link} to=\"/awards/\" onClick={this.toggleCond}>Awards</NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <NavItem>\n              <NavLink tag={Link} to=\"/skills/\" onClick={this.toggleCond}>Skills</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/resume/\" onClick={this.toggleCond}>Resume</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink tag={Link} to=\"/contacts/\" onClick={this.toggleCond}>Contact Me</NavLink>\n            </NavItem>\n            {\n              fb.isUserLoggedIn() &&\n              <NavItem>\n                <NavLink tag={Link} to=\"/admin-edit/\" onClick={this.toggleCond}>Edit</NavLink>\n              </NavItem>\n            }\n          </Nav>\n        </Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default NavHeader;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Edit from '../screens/edit'\nimport fb from '../firebase';\n\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return (\n          fb.isUserLoggedIn() ?\n            <Edit {...props} /> :\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }} />\n        );\n      }}\n    />\n  );\n};\n","import React, { Component } from 'react';\nimport {\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from './screens/home';\nimport Experience from './screens/experience';\nimport Projects from './screens/projects';\nimport Contacts from './screens/contacts';\nimport Courses from './screens/courses';\nimport Resume from './screens/resume';\nimport Admin from './screens/admin';\nimport Edit from './screens/edit';\nimport NavHeader from './components/navheader';\nimport { PrivateRoute } from './components/privateroute';\nimport fb from './firebase';\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    fb.auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log('user is logged in');\n      } else {\n        console.log('user is not logged in');\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <NavHeader />\n        <div className=\"site_container\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/experience/\" component={() => <Experience fbRef={fb.experienceRef} />} />\n            <Route path=\"/projects/\" component={Projects} />\n            <Route path=\"/courses/\" component={Courses} />\n            <Route path=\"/clubs/\" component={() => <Experience fbRef={fb.clubsRef} />} />\n            <Route path=\"/contacts/\" component={Contacts} />\n            <Route path=\"/resume/\" component={Resume} />\n            {/* Admin portal */}\n            <Route path=\"/admin/\" exact component={Admin} />\n            <PrivateRoute path='/admin-edit' component={Edit} />\n            {/* 404 redirect to Home */}\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}